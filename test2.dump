--
-- PostgreSQL database dump
--

-- Dumped from database version 14.1
-- Dumped by pg_dump version 14.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: EHub_contact; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."EHub_contact" (
    id bigint NOT NULL,
    name character varying(50),
    email character varying(254) NOT NULL,
    subject character varying(140),
    message text,
    "timestamp" timestamp with time zone NOT NULL
);


ALTER TABLE public."EHub_contact" OWNER TO postgres;

--
-- Name: EHub_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."EHub_contact_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."EHub_contact_id_seq" OWNER TO postgres;

--
-- Name: EHub_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."EHub_contact_id_seq" OWNED BY public."EHub_contact".id;


--
-- Name: EHub_emailsubscription; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."EHub_emailsubscription" (
    id bigint NOT NULL,
    email character varying(254) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL
);


ALTER TABLE public."EHub_emailsubscription" OWNER TO postgres;

--
-- Name: EHub_emailsubscription_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."EHub_emailsubscription_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."EHub_emailsubscription_id_seq" OWNER TO postgres;

--
-- Name: EHub_emailsubscription_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."EHub_emailsubscription_id_seq" OWNED BY public."EHub_emailsubscription".id;


--
-- Name: EHub_media; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."EHub_media" (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    image character varying(100) NOT NULL
);


ALTER TABLE public."EHub_media" OWNER TO postgres;

--
-- Name: EHub_media_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."EHub_media_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."EHub_media_id_seq" OWNER TO postgres;

--
-- Name: EHub_media_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."EHub_media_id_seq" OWNED BY public."EHub_media".id;


--
-- Name: EHub_profile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."EHub_profile" (
    id bigint NOT NULL,
    first_name character varying(10),
    second_name character varying(10),
    email character varying(140),
    image character varying(200),
    gender character varying(50),
    date_joined timestamp with time zone NOT NULL,
    auth_token character varying(100),
    is_verified boolean NOT NULL,
    username_id integer
);


ALTER TABLE public."EHub_profile" OWNER TO postgres;

--
-- Name: EHub_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."EHub_profile_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."EHub_profile_id_seq" OWNER TO postgres;

--
-- Name: EHub_profile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."EHub_profile_id_seq" OWNED BY public."EHub_profile".id;


--
-- Name: MArticles_acomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MArticles_acomment" (
    id bigint NOT NULL,
    content text NOT NULL,
    commented_on timestamp with time zone NOT NULL,
    status boolean NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    level integer NOT NULL,
    article_id bigint,
    parent_id bigint,
    user_id bigint,
    CONSTRAINT "MArticles_acomment_level_check" CHECK ((level >= 0)),
    CONSTRAINT "MArticles_acomment_lft_check" CHECK ((lft >= 0)),
    CONSTRAINT "MArticles_acomment_rght_check" CHECK ((rght >= 0)),
    CONSTRAINT "MArticles_acomment_tree_id_check" CHECK ((tree_id >= 0))
);


ALTER TABLE public."MArticles_acomment" OWNER TO postgres;

--
-- Name: MArticles_acomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MArticles_acomment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MArticles_acomment_id_seq" OWNER TO postgres;

--
-- Name: MArticles_acomment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MArticles_acomment_id_seq" OWNED BY public."MArticles_acomment".id;


--
-- Name: MArticles_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MArticles_category" (
    id bigint NOT NULL,
    name character varying(100) NOT NULL
);


ALTER TABLE public."MArticles_category" OWNER TO postgres;

--
-- Name: MArticles_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MArticles_category_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MArticles_category_id_seq" OWNER TO postgres;

--
-- Name: MArticles_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MArticles_category_id_seq" OWNED BY public."MArticles_category".id;


--
-- Name: MArticles_visitior; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MArticles_visitior" (
    id bigint NOT NULL,
    ipaddress character varying(100)
);


ALTER TABLE public."MArticles_visitior" OWNER TO postgres;

--
-- Name: MArticles_visitior_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MArticles_visitior_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MArticles_visitior_id_seq" OWNER TO postgres;

--
-- Name: MArticles_visitior_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MArticles_visitior_id_seq" OWNED BY public."MArticles_visitior".id;


--
-- Name: MCourses_chapter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MCourses_chapter" (
    id bigint NOT NULL,
    title character varying(100),
    course_id bigint,
    chapter_no smallint,
    CONSTRAINT "MCourses_chapter_chapter_no_1c6d661f_check" CHECK ((chapter_no >= 0))
);


ALTER TABLE public."MCourses_chapter" OWNER TO postgres;

--
-- Name: MCourses_chapter_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MCourses_chapter_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MCourses_chapter_id_seq" OWNER TO postgres;

--
-- Name: MCourses_chapter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MCourses_chapter_id_seq" OWNED BY public."MCourses_chapter".id;


--
-- Name: MCourses_course; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MCourses_course" (
    id bigint NOT NULL,
    visibility character varying(20) NOT NULL,
    title character varying(100),
    slug character varying(50),
    thumbnail character varying(200),
    description text,
    published_date timestamp with time zone NOT NULL,
    author_id bigint
);


ALTER TABLE public."MCourses_course" OWNER TO postgres;

--
-- Name: MCourses_course_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MCourses_course_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MCourses_course_id_seq" OWNER TO postgres;

--
-- Name: MCourses_course_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MCourses_course_id_seq" OWNED BY public."MCourses_course".id;


--
-- Name: MCourses_cscomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MCourses_cscomment" (
    id bigint NOT NULL,
    content text NOT NULL,
    commented_on timestamp with time zone NOT NULL,
    status boolean NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    level integer NOT NULL,
    parent_id bigint,
    topic_id bigint,
    user_id bigint,
    CONSTRAINT "MCourses_cscomment_level_check" CHECK ((level >= 0)),
    CONSTRAINT "MCourses_cscomment_lft_check" CHECK ((lft >= 0)),
    CONSTRAINT "MCourses_cscomment_rght_check" CHECK ((rght >= 0)),
    CONSTRAINT "MCourses_cscomment_tree_id_check" CHECK ((tree_id >= 0))
);


ALTER TABLE public."MCourses_cscomment" OWNER TO postgres;

--
-- Name: MCourses_cscomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MCourses_cscomment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MCourses_cscomment_id_seq" OWNER TO postgres;

--
-- Name: MCourses_cscomment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MCourses_cscomment_id_seq" OWNED BY public."MCourses_cscomment".id;


--
-- Name: MCourses_topic; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MCourses_topic" (
    id bigint NOT NULL,
    title character varying(100),
    description text,
    slug character varying(50),
    published_date timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    difficulty_level character varying(50),
    author_id bigint,
    chapter_id bigint,
    next_topic_id bigint,
    previous_topic_id bigint,
    topic_no smallint,
    CONSTRAINT "MCourses_topic_topic_no_ec701f8c_check" CHECK ((topic_no >= 0))
);


ALTER TABLE public."MCourses_topic" OWNER TO postgres;

--
-- Name: MCourses_topic_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MCourses_topic_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MCourses_topic_id_seq" OWNER TO postgres;

--
-- Name: MCourses_topic_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MCourses_topic_id_seq" OWNED BY public."MCourses_topic".id;


--
-- Name: MProgrammingLanguage_chapter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MProgrammingLanguage_chapter" (
    id bigint NOT NULL,
    title character varying(100),
    language_id bigint,
    chapter_no smallint,
    CONSTRAINT "MProgrammingLanguage_chapter_chapter_no_cda11da5_check" CHECK ((chapter_no >= 0))
);


ALTER TABLE public."MProgrammingLanguage_chapter" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_chapter_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MProgrammingLanguage_chapter_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MProgrammingLanguage_chapter_id_seq" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_chapter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MProgrammingLanguage_chapter_id_seq" OWNED BY public."MProgrammingLanguage_chapter".id;


--
-- Name: MProgrammingLanguage_plcomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MProgrammingLanguage_plcomment" (
    id bigint NOT NULL,
    content text NOT NULL,
    commented_on timestamp with time zone NOT NULL,
    status boolean NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    level integer NOT NULL,
    parent_id bigint,
    topics_id bigint,
    user_id bigint,
    CONSTRAINT "MProgrammingLanguage_plcomment_level_check" CHECK ((level >= 0)),
    CONSTRAINT "MProgrammingLanguage_plcomment_lft_check" CHECK ((lft >= 0)),
    CONSTRAINT "MProgrammingLanguage_plcomment_rght_check" CHECK ((rght >= 0)),
    CONSTRAINT "MProgrammingLanguage_plcomment_tree_id_check" CHECK ((tree_id >= 0))
);


ALTER TABLE public."MProgrammingLanguage_plcomment" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_plcomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MProgrammingLanguage_plcomment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MProgrammingLanguage_plcomment_id_seq" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_plcomment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MProgrammingLanguage_plcomment_id_seq" OWNED BY public."MProgrammingLanguage_plcomment".id;


--
-- Name: MProgrammingLanguage_programminglanguage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MProgrammingLanguage_programminglanguage" (
    id bigint NOT NULL,
    title character varying(100),
    thumbnail character varying(200),
    slug character varying(50),
    description text,
    published_date timestamp with time zone NOT NULL,
    author_id bigint
);


ALTER TABLE public."MProgrammingLanguage_programminglanguage" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_programminglanguage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MProgrammingLanguage_programminglanguage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MProgrammingLanguage_programminglanguage_id_seq" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_programminglanguage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MProgrammingLanguage_programminglanguage_id_seq" OWNED BY public."MProgrammingLanguage_programminglanguage".id;


--
-- Name: MProgrammingLanguage_topics; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MProgrammingLanguage_topics" (
    id bigint NOT NULL,
    title character varying(100),
    description text,
    slug character varying(50),
    published_date timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    difficulty_level character varying(50),
    author_id bigint,
    chapter_id bigint,
    next_topic_id bigint,
    planguage_id bigint,
    previous_topic_id bigint,
    topic_no smallint,
    CONSTRAINT "MProgrammingLanguage_topics_topic_no_fd4ac673_check" CHECK ((topic_no >= 0))
);


ALTER TABLE public."MProgrammingLanguage_topics" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_topics_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MProgrammingLanguage_topics_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MProgrammingLanguage_topics_id_seq" OWNER TO postgres;

--
-- Name: MProgrammingLanguage_topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MProgrammingLanguage_topics_id_seq" OWNED BY public."MProgrammingLanguage_topics".id;


--
-- Name: MSoftwareDevelopment_chapter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MSoftwareDevelopment_chapter" (
    id bigint NOT NULL,
    title character varying(100),
    framework_id bigint,
    chapter_no smallint,
    CONSTRAINT "MSoftwareDevelopment_chapter_chapter_no_d083c175_check" CHECK ((chapter_no >= 0))
);


ALTER TABLE public."MSoftwareDevelopment_chapter" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_chapter_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MSoftwareDevelopment_chapter_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MSoftwareDevelopment_chapter_id_seq" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_chapter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MSoftwareDevelopment_chapter_id_seq" OWNED BY public."MSoftwareDevelopment_chapter".id;


--
-- Name: MSoftwareDevelopment_framework; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MSoftwareDevelopment_framework" (
    id bigint NOT NULL,
    title character varying(100),
    thumbnail character varying(200),
    slug character varying(50),
    description text,
    published_date timestamp with time zone NOT NULL,
    author_id bigint,
    language_id bigint
);


ALTER TABLE public."MSoftwareDevelopment_framework" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_framework_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MSoftwareDevelopment_framework_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MSoftwareDevelopment_framework_id_seq" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_framework_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MSoftwareDevelopment_framework_id_seq" OWNED BY public."MSoftwareDevelopment_framework".id;


--
-- Name: MSoftwareDevelopment_frameworkcomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MSoftwareDevelopment_frameworkcomment" (
    id bigint NOT NULL,
    content text NOT NULL,
    commented_on timestamp with time zone NOT NULL,
    status boolean NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    level integer NOT NULL,
    parent_id bigint,
    topic_id bigint,
    user_id bigint,
    CONSTRAINT "MSoftwareDevelopment_frameworkcomment_level_check" CHECK ((level >= 0)),
    CONSTRAINT "MSoftwareDevelopment_frameworkcomment_lft_check" CHECK ((lft >= 0)),
    CONSTRAINT "MSoftwareDevelopment_frameworkcomment_rght_check" CHECK ((rght >= 0)),
    CONSTRAINT "MSoftwareDevelopment_frameworkcomment_tree_id_check" CHECK ((tree_id >= 0))
);


ALTER TABLE public."MSoftwareDevelopment_frameworkcomment" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_frameworkcomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MSoftwareDevelopment_frameworkcomment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MSoftwareDevelopment_frameworkcomment_id_seq" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_frameworkcomment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MSoftwareDevelopment_frameworkcomment_id_seq" OWNED BY public."MSoftwareDevelopment_frameworkcomment".id;


--
-- Name: MSoftwareDevelopment_programmlanguage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MSoftwareDevelopment_programmlanguage" (
    id bigint NOT NULL,
    name character varying(100),
    published_date timestamp with time zone NOT NULL
);


ALTER TABLE public."MSoftwareDevelopment_programmlanguage" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_programmlanguage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MSoftwareDevelopment_programmlanguage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MSoftwareDevelopment_programmlanguage_id_seq" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_programmlanguage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MSoftwareDevelopment_programmlanguage_id_seq" OWNED BY public."MSoftwareDevelopment_programmlanguage".id;


--
-- Name: MSoftwareDevelopment_topic; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."MSoftwareDevelopment_topic" (
    id bigint NOT NULL,
    title character varying(100),
    description text,
    slug character varying(50),
    published_date timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    difficulty_level character varying(50),
    author_id bigint,
    chapter_id bigint,
    framework_id bigint,
    next_topic_id bigint,
    previous_topic_id bigint,
    topic_no smallint,
    CONSTRAINT "MSoftwareDevelopment_topic_topic_no_21055f29_check" CHECK ((topic_no >= 0))
);


ALTER TABLE public."MSoftwareDevelopment_topic" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_topic_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."MSoftwareDevelopment_topic_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."MSoftwareDevelopment_topic_id_seq" OWNER TO postgres;

--
-- Name: MSoftwareDevelopment_topic_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."MSoftwareDevelopment_topic_id_seq" OWNED BY public."MSoftwareDevelopment_topic".id;


--
-- Name: article; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.article (
    id bigint NOT NULL,
    contenttype character varying(50) NOT NULL,
    visibility character varying(20) NOT NULL,
    title character varying(750),
    thumbnail character varying(200),
    description text,
    slug character varying(750),
    published_date timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    featured boolean NOT NULL,
    status character varying(10) NOT NULL,
    author_id bigint NOT NULL,
    total_views integer NOT NULL
);


ALTER TABLE public.article OWNER TO postgres;

--
-- Name: article_bookmarks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.article_bookmarks (
    id bigint NOT NULL,
    article_id bigint NOT NULL,
    profile_id bigint NOT NULL
);


ALTER TABLE public.article_bookmarks OWNER TO postgres;

--
-- Name: article_bookmarks_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.article_bookmarks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.article_bookmarks_id_seq OWNER TO postgres;

--
-- Name: article_bookmarks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.article_bookmarks_id_seq OWNED BY public.article_bookmarks.id;


--
-- Name: article_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.article_category (
    id bigint NOT NULL,
    article_id bigint NOT NULL,
    category_id bigint NOT NULL
);


ALTER TABLE public.article_category OWNER TO postgres;

--
-- Name: article_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.article_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.article_category_id_seq OWNER TO postgres;

--
-- Name: article_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.article_category_id_seq OWNED BY public.article_category.id;


--
-- Name: article_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.article_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.article_id_seq OWNER TO postgres;

--
-- Name: article_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.article_id_seq OWNED BY public.article.id;


--
-- Name: article_views; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.article_views (
    id bigint NOT NULL,
    article_id bigint NOT NULL,
    visitior_id bigint NOT NULL
);


ALTER TABLE public.article_views OWNER TO postgres;

--
-- Name: article_views_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.article_views_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.article_views_id_seq OWNER TO postgres;

--
-- Name: article_views_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.article_views_id_seq OWNED BY public.article_views.id;


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auth_group_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_id_seq OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auth_group_id_seq OWNED BY public.auth_group.id;


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_permissions_id_seq OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auth_group_permissions_id_seq OWNED BY public.auth_group_permissions.id;


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auth_permission_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_permission_id_seq OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auth_permission_id_seq OWNED BY public.auth_permission.id;


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_groups_id_seq OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auth_user_groups_id_seq OWNED BY public.auth_user_groups.id;


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auth_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_id_seq OWNER TO postgres;

--
-- Name: auth_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auth_user_id_seq OWNED BY public.auth_user.id;


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_user_permissions_id_seq OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.auth_user_user_permissions_id_seq OWNED BY public.auth_user_user_permissions.id;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.django_admin_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_admin_log_id_seq OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.django_admin_log_id_seq OWNED BY public.django_admin_log.id;


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.django_content_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_content_type_id_seq OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.django_content_type_id_seq OWNED BY public.django_content_type.id;


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_migrations_id_seq OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.django_migrations_id_seq OWNED BY public.django_migrations.id;


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: django_site; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_site (
    id integer NOT NULL,
    domain character varying(100) NOT NULL,
    name character varying(50) NOT NULL
);


ALTER TABLE public.django_site OWNER TO postgres;

--
-- Name: django_site_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.django_site_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_site_id_seq OWNER TO postgres;

--
-- Name: django_site_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.django_site_id_seq OWNED BY public.django_site.id;


--
-- Name: taggit_tag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.taggit_tag (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(100) NOT NULL
);


ALTER TABLE public.taggit_tag OWNER TO postgres;

--
-- Name: taggit_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.taggit_tag_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.taggit_tag_id_seq OWNER TO postgres;

--
-- Name: taggit_tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.taggit_tag_id_seq OWNED BY public.taggit_tag.id;


--
-- Name: taggit_taggeditem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.taggit_taggeditem (
    id integer NOT NULL,
    object_id integer NOT NULL,
    content_type_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.taggit_taggeditem OWNER TO postgres;

--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.taggit_taggeditem_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.taggit_taggeditem_id_seq OWNER TO postgres;

--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.taggit_taggeditem_id_seq OWNED BY public.taggit_taggeditem.id;


--
-- Name: EHub_contact id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_contact" ALTER COLUMN id SET DEFAULT nextval('public."EHub_contact_id_seq"'::regclass);


--
-- Name: EHub_emailsubscription id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_emailsubscription" ALTER COLUMN id SET DEFAULT nextval('public."EHub_emailsubscription_id_seq"'::regclass);


--
-- Name: EHub_media id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_media" ALTER COLUMN id SET DEFAULT nextval('public."EHub_media_id_seq"'::regclass);


--
-- Name: EHub_profile id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_profile" ALTER COLUMN id SET DEFAULT nextval('public."EHub_profile_id_seq"'::regclass);


--
-- Name: MArticles_acomment id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_acomment" ALTER COLUMN id SET DEFAULT nextval('public."MArticles_acomment_id_seq"'::regclass);


--
-- Name: MArticles_category id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_category" ALTER COLUMN id SET DEFAULT nextval('public."MArticles_category_id_seq"'::regclass);


--
-- Name: MArticles_visitior id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_visitior" ALTER COLUMN id SET DEFAULT nextval('public."MArticles_visitior_id_seq"'::regclass);


--
-- Name: MCourses_chapter id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_chapter" ALTER COLUMN id SET DEFAULT nextval('public."MCourses_chapter_id_seq"'::regclass);


--
-- Name: MCourses_course id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_course" ALTER COLUMN id SET DEFAULT nextval('public."MCourses_course_id_seq"'::regclass);


--
-- Name: MCourses_cscomment id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_cscomment" ALTER COLUMN id SET DEFAULT nextval('public."MCourses_cscomment_id_seq"'::regclass);


--
-- Name: MCourses_topic id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic" ALTER COLUMN id SET DEFAULT nextval('public."MCourses_topic_id_seq"'::regclass);


--
-- Name: MProgrammingLanguage_chapter id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_chapter" ALTER COLUMN id SET DEFAULT nextval('public."MProgrammingLanguage_chapter_id_seq"'::regclass);


--
-- Name: MProgrammingLanguage_plcomment id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_plcomment" ALTER COLUMN id SET DEFAULT nextval('public."MProgrammingLanguage_plcomment_id_seq"'::regclass);


--
-- Name: MProgrammingLanguage_programminglanguage id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_programminglanguage" ALTER COLUMN id SET DEFAULT nextval('public."MProgrammingLanguage_programminglanguage_id_seq"'::regclass);


--
-- Name: MProgrammingLanguage_topics id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics" ALTER COLUMN id SET DEFAULT nextval('public."MProgrammingLanguage_topics_id_seq"'::regclass);


--
-- Name: MSoftwareDevelopment_chapter id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_chapter" ALTER COLUMN id SET DEFAULT nextval('public."MSoftwareDevelopment_chapter_id_seq"'::regclass);


--
-- Name: MSoftwareDevelopment_framework id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_framework" ALTER COLUMN id SET DEFAULT nextval('public."MSoftwareDevelopment_framework_id_seq"'::regclass);


--
-- Name: MSoftwareDevelopment_frameworkcomment id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_frameworkcomment" ALTER COLUMN id SET DEFAULT nextval('public."MSoftwareDevelopment_frameworkcomment_id_seq"'::regclass);


--
-- Name: MSoftwareDevelopment_programmlanguage id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_programmlanguage" ALTER COLUMN id SET DEFAULT nextval('public."MSoftwareDevelopment_programmlanguage_id_seq"'::regclass);


--
-- Name: MSoftwareDevelopment_topic id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic" ALTER COLUMN id SET DEFAULT nextval('public."MSoftwareDevelopment_topic_id_seq"'::regclass);


--
-- Name: article id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article ALTER COLUMN id SET DEFAULT nextval('public.article_id_seq'::regclass);


--
-- Name: article_bookmarks id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_bookmarks ALTER COLUMN id SET DEFAULT nextval('public.article_bookmarks_id_seq'::regclass);


--
-- Name: article_category id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_category ALTER COLUMN id SET DEFAULT nextval('public.article_category_id_seq'::regclass);


--
-- Name: article_views id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_views ALTER COLUMN id SET DEFAULT nextval('public.article_views_id_seq'::regclass);


--
-- Name: auth_group id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group ALTER COLUMN id SET DEFAULT nextval('public.auth_group_id_seq'::regclass);


--
-- Name: auth_group_permissions id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_group_permissions_id_seq'::regclass);


--
-- Name: auth_permission id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission ALTER COLUMN id SET DEFAULT nextval('public.auth_permission_id_seq'::regclass);


--
-- Name: auth_user id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user ALTER COLUMN id SET DEFAULT nextval('public.auth_user_id_seq'::regclass);


--
-- Name: auth_user_groups id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups ALTER COLUMN id SET DEFAULT nextval('public.auth_user_groups_id_seq'::regclass);


--
-- Name: auth_user_user_permissions id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_user_user_permissions_id_seq'::regclass);


--
-- Name: django_admin_log id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log ALTER COLUMN id SET DEFAULT nextval('public.django_admin_log_id_seq'::regclass);


--
-- Name: django_content_type id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type ALTER COLUMN id SET DEFAULT nextval('public.django_content_type_id_seq'::regclass);


--
-- Name: django_migrations id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations ALTER COLUMN id SET DEFAULT nextval('public.django_migrations_id_seq'::regclass);


--
-- Name: django_site id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_site ALTER COLUMN id SET DEFAULT nextval('public.django_site_id_seq'::regclass);


--
-- Name: taggit_tag id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag ALTER COLUMN id SET DEFAULT nextval('public.taggit_tag_id_seq'::regclass);


--
-- Name: taggit_taggeditem id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem ALTER COLUMN id SET DEFAULT nextval('public.taggit_taggeditem_id_seq'::regclass);


--
-- Data for Name: EHub_contact; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."EHub_contact" (id, name, email, subject, message, "timestamp") FROM stdin;
\.


--
-- Data for Name: EHub_emailsubscription; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."EHub_emailsubscription" (id, email, "timestamp") FROM stdin;
1	sameershahi123@gmail.com	2022-02-08 13:19:07.305827+05:45
2	rasengankid999@gmail.com	2022-03-12 18:48:44.158769+05:45
\.


--
-- Data for Name: EHub_media; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."EHub_media" (id, name, image) FROM stdin;
\.


--
-- Data for Name: EHub_profile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."EHub_profile" (id, first_name, second_name, email, image, gender, date_joined, auth_token, is_verified, username_id) FROM stdin;
2	\N	\N	anjanparajuli2001@gmail.com		\N	2022-02-03 18:07:07.961+05:45	\N	f	3
3	\N	\N	girisangam00@gmail.com		\N	2022-02-03 18:07:07.961+05:45	\N	f	4
4	\N	\N	aabiskardhungana0@gmail.com		\N	2022-02-03 18:07:07.961+05:45	\N	f	5
5	\N	\N	bibekacharya955@gmail.com		\N	2022-02-03 18:07:07.976+05:45	\N	f	6
6	\N	\N	buyersangam12@gmail.com		\N	2022-02-03 18:07:07.976+05:45	\N	f	7
7	\N	\N	sama12@gmail.com		\N	2022-02-03 18:07:07.976+05:45	\N	f	8
8	\N	\N			\N	2022-03-26 15:01:23.749718+05:45	\N	f	9
1	Sameer	Shahi	\N	https://res.cloudinary.com/dcgrv6shk/image/upload/v1635870896/mediafiles/Profiles/Sam_roiinq.jpg	Male	2021-10-07 17:26:13.139+05:45	dasdasdas	t	1
\.


--
-- Data for Name: MArticles_acomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MArticles_acomment" (id, content, commented_on, status, lft, rght, tree_id, level, article_id, parent_id, user_id) FROM stdin;
1	nice	2022-04-02 18:58:57.322965+05:45	t	1	2	1	0	19	\N	1
\.


--
-- Data for Name: MArticles_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MArticles_category" (id, name) FROM stdin;
1	WebDevelopment
7	DevOps
8	WebDeployment
10	AWS
11	Technology
13	Software
\.


--
-- Data for Name: MArticles_visitior; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MArticles_visitior" (id, ipaddress) FROM stdin;
5	127.0.0.1
\.


--
-- Data for Name: MCourses_chapter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MCourses_chapter" (id, title, course_id, chapter_no) FROM stdin;
1	Jquery Basic	1	1
2	Introduction to Data Structure Types	3	3
\.


--
-- Data for Name: MCourses_course; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MCourses_course" (id, visibility, title, slug, thumbnail, description, published_date, author_id) FROM stdin;
1	public	Jquery	jquery	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636897397/mediafiles/Courses/jquery_dac4cs.png	<p>jQuery is a lightweight JavaScript library to write redundant code that&nbsp;utilizes the $ sign which is an alias for jQuery.</p>\r\n\r\n<p>jQuery takes multiple lines of code that covers up&nbsp;many lines of code and wraps them into methods that you can call with a single line of code. Moreover, It&nbsp;simplifies myriad complicated things like AJAX calls and DOM manipulation which possess&nbsp;features like CSS manipulation, Event triggering, etc.</p>\r\n\r\n<p>Many of the tech giants&nbsp;on the Web use jQuery, such as Google, Microsoft, IBM, Netflix. The jQuery syntax is tailor-made for selecting HTML elements and performing some action on the element(s).</p>	2021-10-09 19:09:43.743+05:45	1
3	public	Data Structure and Algorithm	data-structure-and-algorithm	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636897428/mediafiles/Courses/datastructureandalgorithm_s11ogj.png	<p>The data structure is a technique of storing and organizing data in such a way that the data can be utilized in an efficient manner while an Algorithm is a process or set of rules to be followed in calculations or other problem-solving operations.</p>	2021-10-27 17:54:03.266+05:45	1
\.


--
-- Data for Name: MCourses_cscomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MCourses_cscomment" (id, content, commented_on, status, lft, rght, tree_id, level, parent_id, topic_id, user_id) FROM stdin;
\.


--
-- Data for Name: MCourses_topic; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MCourses_topic" (id, title, description, slug, published_date, last_updated, difficulty_level, author_id, chapter_id, next_topic_id, previous_topic_id, topic_no) FROM stdin;
1	linear and Non linear Data Structure	<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:14.0pt">What is Data structure?</span></strong></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Data structure is a technique of organizing, managing and storing all data items in such a way that the data can be utilized in an efficient manner&nbsp;and establish relationships among those data items.<br />\r\nThey are the building blocks of a program which&nbsp;mainly specifies the following four things:</span></span></span></p>\r\n\r\n<ul>\r\n\t<li><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Organization of data.</span></span></span></li>\r\n\t<li><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Accessing methods</span></span></span></li>\r\n\t<li><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Degree of associativity</span></span></span></li>\r\n\t<li><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Processing alternatives for information</span></span></span></li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">To develop a program of an algorithm, We should select an appropriate data structure for that algorithm. Therefore algorithm and its associated data structures form a program.</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Algorithm + Data structure = Program</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">A static data structure is one whose capacity is fixed at creation. For example, array. A dynamic data structure is one whose capacity is variable, so it can expand or contract at any time. For example, linked list, binary tree, etc.</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">In&nbsp;Computer Science, a data structure is designed in such a way that it can work with various algorithms. A data structure is classified into two categories:</span></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">1.Linear data structure</span></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">2.Non-linear data structure</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Now let&#39;s have a brief look at both these data structures.</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong>Linear data structures</strong></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">A linear&nbsp;<a href="https://www.javatpoint.com/data-structure-tutorial">data structure</a>&nbsp;is a structure in which the elements are stored sequentially in a contiguous memory location, and the elements lie next to one after another.&nbsp;They can be traversed in a single run and a particular element can be accessed at atime</span></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Examples:&nbsp;Array, Queue, Stack, Linked List.</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt">Non-Linear data structures</span></strong></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">A non-linear data structure is another type of data structure in which the data elements are arranged in a non-linear fashion. So,&nbsp;&nbsp;the data elements cannot be traversed or accessed at a time. In the case of linear data structure, an element is connected to two elements, whereas, in the non-linear data structure, an element can be connected to more than two elements.</span></span></span></p>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt">Examples:&nbsp;Trees,&nbsp;&nbsp;Graphs</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table cellspacing="0" class="MsoTableGrid" style="border-collapse:collapse; border:none; margin-left:-10px; width:662px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:1px solid black; height:57px; vertical-align:top; width:218px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:1px solid black; height:57px; vertical-align:top; width:208px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:14.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Linear Data Structure</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:1px solid black; height:57px; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:14.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Non-Linear Data Structure</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; height:46px; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Definition</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; height:46px; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">In this structure, the elements are arranged sequentially or linearly and attached to one another.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; height:46px; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">In this structure, the elements are arranged hierarchically or non-linear manner.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Traversal</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">As linear data structure is a single level, so it requires a single run to traverse each data item.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">The data items in a non-linear data structure cannot be accessed in a single run. It requires multiple runs to be traversed.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Arrangement</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">Each data item is attached to the previous and next items.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">Each item is attached to many other items.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Hierarchy</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">This data structure does not contain any hierarchy, and all the data elements are organized in a same level.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">In this structure, the elements are hierarchically &nbsp;arranged.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Time Complexity</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">The time complexity of linear data structure increases with the increase in the input size.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">The time complexity of Non-linear data structure doesn&rsquo;t increases with the increase in the input size.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">Examples</span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">Arrays, linked list, stack, queue are the examples of a linear data structure.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif">Trees and Graphs are the examples of a non-linear data structure.</span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:218px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Applications</span></span></span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:208px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Used in&nbsp; developing the software</span></span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:236px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><span style="font-size:12.0pt"><span style="font-family:&quot;Times New Roman&quot;,serif"><span style="color:black">Used in Neural networks, Artificiak Intelligence etc.</span></span></span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style="margin-left:9px; text-align:justify">&nbsp;</p>\r\n\r\n<p style="margin-left:9px; text-align:justify">&nbsp;</p>	linear-and-non-linear-data-structure	2021-10-27 23:00:07.291+05:45	2021-11-17 13:55:03.195+05:45	Easy	1	2	\N	\N	1
2	Getting Started with Hello World!	<p>To use Jquery, We use&nbsp; <strong>$ ,&nbsp;</strong>an alias for the jQuery function and namespace.</p>\r\n\r\n<p>Syntax:&nbsp;&nbsp;<strong>$(selector).method()</strong></p>\r\n\r\n<p>Make a <strong>index.html</strong> file. It looks like this:</p>\r\n\r\n<pre>\r\n<code class="language-html">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset="utf-8"&gt;\r\n        &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;\r\n        &lt;title&gt;&lt;/title&gt;\r\n        &lt;meta name="description" content=""&gt;\r\n        &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;\r\n        &lt;link rel="stylesheet" href=""&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n\r\n        &lt;h1&gt;&lt;/h1&gt;\r\n        \r\n        &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"&gt;&lt;/script&gt;\r\n    &lt;/body&gt;\r\n    &lt;script&gt;\r\n        $('h1').text("Hello World!")\r\n        //jQuery('h1').text("Hello World!")   \r\n    &lt;/script&gt;\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>&nbsp; <span style="background-color:#ecf0f1">$(&#39;h1&#39;).text(&quot;Hello World!&quot;)</span>&nbsp; &nbsp;-&gt; Select h1 element and display text as Hello World! using text()</p>\r\n\r\n<p>&nbsp; Instead of $ you can use jQuery to obtain the same result.</p>\r\n\r\n<p>&nbsp;</p>	getting-started-with-hello-world	2021-10-28 13:55:33.296+05:45	2021-11-17 13:46:47.961+05:45	Easy	1	1	\N	\N	1
3	DocumentReady and Namespace Collision	<p><span style="font-size:16px"><big><strong>Document Ready Event</strong></big></span></p>\r\n\r\n<p>Consider an <strong>index.html</strong></p>\r\n\r\n<pre>\r\n<code class="language-html">&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset="utf-8"&gt;\r\n    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;\r\n    &lt;title&gt;Jquery tutorial&lt;/title&gt;\r\n    &lt;meta name="description" content=""&gt;\r\n    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;\r\n    &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"&gt;&lt;/link&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n\r\n&lt;div class="container m-5"&gt;\r\n    &lt;p class="product"&gt;\r\n        &lt;strong&gt; Learn Javascript&lt;/strong&gt;\r\n     &lt;/p&gt;\r\n     &lt;button class="btn btn-primary" id="btn1"&gt;Add To Cart&lt;/button&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;/body&gt;\r\n\r\n&lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"&gt;&lt;/script&gt;\r\n&lt;script src="jquery-3.6.0.min.js"&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  $(document).ready(function () {\r\n    $("#btn1").click(function(){\r\n        alert("Added:"+$(".product").text());\r\n      });\r\n&lt;/script&gt;\r\n\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Explanation:&nbsp;</strong></p>\r\n\r\n<p>jQuery click() method&nbsp;in the above example, is&nbsp;inside a document ready event. This is to prevent any jQuery code from running before the document is finished loading (is ready).</p>\r\n\r\n<p>For example,&nbsp;there&#39;s a p element on the document and you have defined a jquery function for it. What if the jquery function runs before the p element is loaded into the document. So, To prevent this document.ready is a must.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:16px"><big><strong>Namespace Collision</strong></big></span></p>\r\n\r\n<p>There are Libraries other than jQuery that uses $ as an alias. This can cause interference between those libraries and<br />\r\njQuery.To release $ for use with other libraries, we use noConflict() method:<br />\r\n<span style="background-color:#ecf0f1">jQuery.noConflict();</span></p>\r\n\r\n<p>You can assign a different variable as an alias for jQuery:<br />\r\n<span style="background-color:#ecf0f1">var jq&nbsp;= jQuery.noConflict()</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1&nbsp;</strong></p>\r\n\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset="utf-8"&gt;\r\n        &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;\r\n        &lt;title&gt;&lt;/title&gt;\r\n        &lt;meta name="description" content=""&gt;\r\n        &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;\r\n        &lt;link rel="stylesheet" href=""&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n\r\n        &lt;h1&gt;&lt;/h1&gt;\r\n\r\n        &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"&gt;&lt;/script&gt;\r\n    &lt;/body&gt;\r\n&lt;script&gt;\r\n    jQuery(function ($) {                // DOM is ready\r\n        var jq = jQuery.noConflict();\r\n        jq('h1').text("Hello World!")\r\n    });\r\n&lt;/script&gt;\r\n\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>	documentready-and-namespace-collision	2021-10-28 14:14:11.877+05:45	2021-11-17 13:47:28.089+05:45	Easy	1	1	\N	\N	2
4	Jquery Selector	<p>There are three main types of selectors in jQuery</p>\r\n\r\n<p>&nbsp; &nbsp; 1. Element selector&nbsp; -&gt;&nbsp; For selecting element,&nbsp;we just mention the name of element&nbsp; i.e p ,h1,body,html,div</p>\r\n\r\n<p>&nbsp; &nbsp; 2. Id selector&nbsp; -&gt;&nbsp; For selecting id, we use a prefix &#39;#&#39;&nbsp; such as&nbsp;&nbsp;#name, #id ,#container</p>\r\n\r\n<p>&nbsp; &nbsp; 3. Class selector&nbsp; -&gt; For selecting id, we use a prefix &#39;.&#39;&nbsp; such as&nbsp;.name, .id , .container</p>\r\n\r\n<p>Other selectors</p>\r\n\r\n<p>&nbsp; &nbsp; Attribute Value&nbsp;Selector&nbsp; i.e&nbsp;&nbsp;<span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;[href=&rsquo;domainname.com&rsquo;]&quot;)</span></span></p>\r\n\r\n<p>&nbsp; &nbsp; Indexed Selector&nbsp; i.e&nbsp; &nbsp;$(&quot;div:eq(1)&quot;)&nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;Selecting by Possession of Attribute&nbsp; i.e&nbsp;$(&quot;[href]&quot;)</p>\r\n\r\n<table cellspacing="0" class="MsoTableGrid" style="border-collapse:collapse; border:none">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:1px solid black; height:37px; vertical-align:top; width:312px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:14.0pt">Jquery Selector</span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:1px solid black; height:37px; vertical-align:top; width:312px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:14.0pt">Meaning</span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;*&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select all the html elements.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;div&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select all the &lt;div&gt; elements.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;#btn1&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select all the element with attribute id == &ldquo;btn1&rdquo;.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;.container&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select all the element with attribute class=&rdquo;container&rdquo;.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;[href=&rsquo;domainname.com&rsquo;]&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select the element with attribute href=&rdquo;domainname.com&rdquo;.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&lsquo;ul li:first&rsquo;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select the first &nbsp;&lt;li&gt; element of &nbsp;the first &lt;ul&gt; element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&lsquo;ul li:first-child&rsquo;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select the &lt;li&gt; element of every &lt;ul&gt; element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&lsquo;h1:first&rsquo;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select the first &lt;h1&gt; element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&lsquo;:text&rsquo;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Selects all the &lt;input&gt; element with attribute type ==&rdquo;text&rdquo;.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;div span&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select all the &lt;span&gt; element that are descendants of &lt;div&gt; element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;div &gt; span&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Selects all the &lt;span&gt; element that child of the &lt;div&gt; element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&quot;a + span&quot;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select all &lt;span&gt; that comes immediately after &lt;a&gt; element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">$(&ldquo;p.eq(3)&rdquo;)</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:312px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Select the third &lt;p&gt; element. 3 refers to an index.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>	jquery-selector	2021-10-28 15:49:59.18+05:45	2021-11-17 13:48:06.741+05:45	Easy	1	1	5	3	3
5	Jquery Events	<p>Events refer to a particular moment at which something has happened. For eg: When you click a signup button on a home page, You have created an Event. These trigger an event handler function that does some task.</p>\r\n\r\n<p>Some Examples:</p>\r\n\r\n<p>1. clicking submit type button to send the form asynchronously.</p>\r\n\r\n<p>2. clicking a&nbsp;button to hide and show a particular element.</p>\r\n\r\n<p>3. validating data and showing messages according to it.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table cellspacing="0" class="MsoTableGrid" style="border-collapse:collapse; border:none">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:1px solid black; height:49px; vertical-align:top; width:135px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:13.0pt">Type</span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:1px solid black; height:49px; vertical-align:top; width:151px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:13.0pt">Event</span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:1px solid black; height:49px; vertical-align:top; width:406px">\r\n\t\t\t<p style="text-align:center"><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif"><strong><span style="font-size:13.0pt">Explanation</span></strong></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.click()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the click event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.dbclick()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the dbclick event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Mouse</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.mouseenter()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the mouseeneter event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.mousedown()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the mousedown event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.toggle()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the toggle event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.hover()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the hover event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.keyup()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the keyup event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Keyboard</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.keydown()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the keydown event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.keypress()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the keypress event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.ready()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the ready event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Document/Window</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.resize()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the mousedown event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.scroll()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the scroll event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.focus()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the focus event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Form</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.submit()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the submit event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:none; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.select()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Executes an event handler function to the select event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:1px solid black; border-right:1px solid black; border-top:none; vertical-align:top; width:135px">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:151px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">.change()</span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style="border-bottom:1px solid black; border-left:none; border-right:1px solid black; border-top:none; vertical-align:top; width:406px">\r\n\t\t\t<p><span style="font-size:11pt"><span style="font-family:Calibri,sans-serif">Exceutes an event handler function to the change event on an element.</span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>	jquery-events	2021-10-28 16:39:00.702+05:45	2021-11-17 13:49:10.972+05:45	Medium	1	1	\N	5	4
\.


--
-- Data for Name: MProgrammingLanguage_chapter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MProgrammingLanguage_chapter" (id, title, language_id, chapter_no) FROM stdin;
\.


--
-- Data for Name: MProgrammingLanguage_plcomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MProgrammingLanguage_plcomment" (id, content, commented_on, status, lft, rght, tree_id, level, parent_id, topics_id, user_id) FROM stdin;
\.


--
-- Data for Name: MProgrammingLanguage_programminglanguage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MProgrammingLanguage_programminglanguage" (id, title, thumbnail, slug, description, published_date, author_id) FROM stdin;
\.


--
-- Data for Name: MProgrammingLanguage_topics; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MProgrammingLanguage_topics" (id, title, description, slug, published_date, last_updated, difficulty_level, author_id, chapter_id, next_topic_id, planguage_id, previous_topic_id, topic_no) FROM stdin;
\.


--
-- Data for Name: MSoftwareDevelopment_chapter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MSoftwareDevelopment_chapter" (id, title, framework_id, chapter_no) FROM stdin;
\.


--
-- Data for Name: MSoftwareDevelopment_framework; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MSoftwareDevelopment_framework" (id, title, thumbnail, slug, description, published_date, author_id, language_id) FROM stdin;
\.


--
-- Data for Name: MSoftwareDevelopment_frameworkcomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MSoftwareDevelopment_frameworkcomment" (id, content, commented_on, status, lft, rght, tree_id, level, parent_id, topic_id, user_id) FROM stdin;
\.


--
-- Data for Name: MSoftwareDevelopment_programmlanguage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MSoftwareDevelopment_programmlanguage" (id, name, published_date) FROM stdin;
\.


--
-- Data for Name: MSoftwareDevelopment_topic; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."MSoftwareDevelopment_topic" (id, title, description, slug, published_date, last_updated, difficulty_level, author_id, chapter_id, framework_id, next_topic_id, previous_topic_id, topic_no) FROM stdin;
\.


--
-- Data for Name: article; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.article (id, contenttype, visibility, title, thumbnail, description, slug, published_date, last_updated, featured, status, author_id, total_views) FROM stdin;
16	Article	Public	Generate Django Models Diagram	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894564/mediafiles/Articles/GeneratDjangoModelDiagrams_ydjgdg.png	<p>So, You are a Django Developer building full-stack web applications following MVT Design Pattern. What If you want to generate the diagram in .png format based on your Django project models which can be visualized and often comes in handy for several tasks. It&nbsp;can be achieved in just 3 steps as follows:</p>\r\n\r\n<p><strong>Step1: </strong>Install pydot and django_extension package&nbsp;</p>\r\n\r\n<pre>\r\n<code>pipenv install pydot==1.4.2</code></pre>\r\n\r\n<pre>\r\n<code>pipenv install django_extensions==3.1.3</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2:</strong> In&nbsp;<strong>settings.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">INSTALLED_APPS = [\r\n  'django_extensions',\r\n]\r\nGRAPH_MODELS = {\r\n  'all_applications': True,\r\n  'group_models': True,\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3:</strong> Run the following command to generate model diagrams in png format.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<pre>\r\n<code>py manage.py graph_models --pydot -a -g -o my_project_visualized.png</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>	generate-django-models-diagram	2021-11-07 13:57:25+05:45	2022-02-08 13:20:29.907506+05:45	f	published	1	0
1	Article	Private	Django Admin Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894563/mediafiles/Articles/djangoadmincheatsheet_tyav12.png	<p>Here is Django admin.py all possible(basic and advanced)&nbsp;configurations. We define a class that will inherit from the&nbsp;admin.ModelAdmin class to register Django models in advance defining exclude, list_display..etc. So that, When we visit the admin page, Features like prepopulated fields, Searching, Ordering, and so on can be observed.</p>\r\n\r\n<p>In <strong>admin.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">from .models import*\r\nfrom django.contrib import admin\r\n\r\n\r\n#Advanced Registry\r\nclass SuperArticleModel(admin.ModelAdmin):\r\n    exclude=('contenttype',)\r\n    list_display = ('title', 'id','published_date','last_updated','author',)\r\n    list_filter=['status','author']\r\n    search_fields=['title','description']\r\n    \r\nadmin.site.register(Article, SuperArticleModel)\r\n\r\nclass PLAdmin(admin.ModelAdmin):\r\n    list_display = ('title', 'thumbnail', 'slug', 'author')\r\n    prepopulated_fields = {'slug': ('title',), }\r\nadmin.site.register(ProgrammingLanguage, PLAdmin)\r\n\r\n\r\n#Mptt Commentmodel Registry\r\nfrom mptt.admin import MPTTModelAdmin\r\nadmin.site.register(AComment, MPTTModelAdmin)\r\n\r\n\r\n#Models register in single line by tuple\r\nadmin.site.register((Profile,Contact,EmailSubscription))</code></pre>\r\n\r\n<p>&nbsp;</p>	django-admin-cheatsheet	2021-09-03 18:17:45+05:45	2022-01-23 12:27:29.652+05:45	f	published	1	0
5	Article	Private	Django Python Command Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894563/mediafiles/Articles/djangoimportcheatsheet_osybdr.png	<p>Python is an&nbsp;advanced object-oriented programming language that is great for Machine learning, Automating stuff,&nbsp;and Building Web applications. Similarly, Django is a Python-based web framework that follows the MVT Design patterns which have become quite popular in the modern era.&nbsp; Below is the cheat sheet that can be referred to when you are working with projects. It can also be used for study purposes.</p>\r\n\r\n<p>All Python Command Cheatsheet is below:</p>\r\n\r\n<p>//Make folder<br />\r\nmkdir templates</p>\r\n\r\n<p>//remove folder file<br />\r\nrm folder</p>\r\n\r\n<p>//make file<br />\r\ntouch templates</p>\r\n\r\n<p>//make a file being outside the folder<br />\r\ntouch templates/base.html</p>\r\n\r\n<p>//get inside the template directory<br />\r\ncd templates</p>\r\n\r\n<p>//exits the current directory<br />\r\ncd..</p>\r\n\r\n<p>//Switching to Directories<br />\r\nD:</p>\r\n\r\n<p><br />\r\n//gives you info about version, license.<br />\r\npython&nbsp;</p>\r\n\r\n<p>//gives info about version only<br />\r\npython -v &nbsp;or python --version</p>\r\n\r\n<p>//tells you the location of python<br />\r\nwhich python&nbsp;</p>\r\n\r\n<p>//For Installing new versions and looking docs.<br />\r\nhttps://www.python.org/</p>\r\n\r\n<p>//Upgrade pip</p>\r\n\r\n<p>pip install --upgrade pip</p>\r\n\r\n<p><br />\r\n//When permission is denied<br />\r\npython -m pip install --user &lt;package&gt;</p>\r\n\r\n<p>//DJANGO VERSION DESCRIPTION<br />\r\npy -m django --version/django --version</p>\r\n\r\n<p>//command for installing django</p>\r\n\r\n<p>pip install django</p>\r\n\r\n<p>//command for upgrading any package using pip<br />\r\npip install &lt;package-name&gt; --upgrade &nbsp;<br />\r\nExample: pip install django --upgrade</p>\r\n\r\n<p>//You need to use the --upgrade or -U flag for upgrading.<br />\r\n//Alternatively, you can use python -m pip install -U Django.</p>\r\n\r\n<p>//Show Django project version<br />\r\npip show django</p>\r\n\r\n<p>//check your all pre-installed versions with python<br />\r\npip list</p>\r\n\r\n<p>//tells you the location of pip.<br />\r\nwhich pip</p>\r\n\r\n<p>py manage.py check --deploy</p>\r\n\r\n<p>//freeze all of your pip packages in the requirements.txt file<br />\r\npip freeze &gt; requirements.txt</p>\r\n\r\n<p>//install all&nbsp;packages of requirements.txt file<br />\r\npip install -r requirements.txt</p>\r\n\r\n<p>Things you should ensure:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You&#39;re in the same folder as the file when running this command.</p>\r\n\r\n<p><br />\r\n//Copy all of your static files into your STATIC_ROOT.<br />\r\npy manage.y collectstatic</p>\r\n\r\n<p>&nbsp;</p>	django-python-command-cheatsheet	2021-10-17 14:44:55.653+05:45	2022-01-23 19:41:30.73+05:45	f	published	1	0
9	Article	Public	Common Photoshop Shortuct keys	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894564/mediafiles/Articles/shortcutkeysinPhotoshop_kf2jj3.png	<p><strong>Adobe Photoshop</strong> is a&nbsp; powerful raster graphics editing software&nbsp;developed and published by Adobe Inc. for Windows and macOS. After reading this article, You&#39;ll know the most common Photoshop&nbsp;shortcut keys which can accelerate your work.</p>\r\n\r\n<p>Depending on which type of computer you have, There are keys with different names but does the same functionality&nbsp;which is as&nbsp; follows:</p>\r\n\r\n<table align="left" border="0" cellpadding="0" cellspacing="0" style="width:500px">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope="col"><strong>macOS</strong></th>\r\n\t\t\t<th scope="col"><strong>Windows</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style="text-align:center">Command</td>\r\n\t\t\t<td style="text-align:center">Ctrl</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="text-align:center">Option</td>\r\n\t\t\t<td style="text-align:center">Alt</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style="text-align:center">Delete</td>\r\n\t\t\t<td style="text-align:center">Backspace</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><br />\r\n<br />\r\n<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;Below are the most common Photoshop Shortcut keys&nbsp; :&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">1) Ctrl</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;A</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Select the&nbsp;layer/object</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">2)Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;D </span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Deselect all layer(s)</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">3) Shift&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Control&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;I&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Select the inverse of the layer.</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">4)Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Alt&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;A</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Select all layers</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">5) Ctrl</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Shift&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;E</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Merge all layers</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">6) Alt&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;.&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Select top layer</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">7) Alt&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;,&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Select bottom layer</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">8) Shift&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Ctrl</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;+&nbsp;</span><strong><span style="font-family:&quot;inherit&quot;,serif">N&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Create a new layer</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">9) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;G&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Group selected layers</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">10) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Shift&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;G</span></strong><em><span style="font-family:&quot;inherit&quot;,serif"><strong>&nbsp;</strong></span></em><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Ungroup selected layers</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">11) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;E</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Merge and flatten selected layers</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">12) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Shift&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Alt&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;E&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Combine all layers into a new layer&nbsp;</span><em><span style="font-family:&quot;inherit&quot;,serif">on top of&nbsp;&nbsp;</span></em><span style="font-family:&quot;Helvetica&quot;,sans-serif">the other layers. Note: </span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">13) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Alt + Mouse Drag </span></strong><span style="font-family:&quot;inherit&quot;,serif">or</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;Ctrl + J</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Duplicate layer</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">14) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+</span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;T</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= activate Transform property of layer/object.</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">15) Ctrl&nbsp; + &nbsp;</span></strong><strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">Z</span></strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;</span><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Redo</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">16) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+ <strong>Alt+ Z</strong></span><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Undo one by one</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">17) Ctrl + &nbsp;</span></strong><strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+ or&nbsp; Alt&nbsp;+ MouseWheelUp</span></strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;</span><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= = Zoom In</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">18) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+ <strong>-</strong></span><strong><span style="font-family:&quot;inherit&quot;,serif">&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;</span><strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">or&nbsp; Alt&nbsp;+ MouseWheelDown&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">=&nbsp; Zoom Out</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">19)&nbsp;</span><span style="font-family:&quot;Helvetica&quot;,sans-serif">Alt&nbsp;+ MouseWheelUp</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= shift right&nbsp;the layer</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">20) </span><span style="font-family:&quot;Helvetica&quot;,sans-serif">Alt&nbsp;+ MouseWheelDown&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= shift left&nbsp;the layer</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">21)&nbsp; Press E/B</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Eraser/Brush tool </span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><span style="font-family:&quot;Helvetica&quot;,sans-serif"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Note:&nbsp; <span style="background-color:#ecf0f1">{</span> </strong>and<strong>&nbsp;&nbsp;<span style="background-color:#ecf0f1">}</span>&nbsp;&nbsp;</strong>for Eraser/Brush Size control</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">22) Ctrl&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+ <strong>R</strong></span><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Ruler</span></span></span></span></h5>\r\n\r\n<h5><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">22) Shift+Alt&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">+ <strong>Mouse Left button hold and drag</strong></span><span style="font-family:&quot;Helvetica&quot;,sans-serif">&nbsp;= Uniform Scaling</span></span></span></span></h5>\r\n\r\n<p><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">23) Ctrl&nbsp; + S&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Save&nbsp;</span></span></span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><strong><span style="font-family:&quot;inherit&quot;,serif">24)&nbsp; Shift + Ctrl&nbsp; + &nbsp;S&nbsp;</span></strong><span style="font-family:&quot;Helvetica&quot;,sans-serif">= Save&nbsp; as</span></span></span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><span style="font-family:&quot;Helvetica&quot;,sans-serif"><strong>25)</strong> <strong>Press F</strong> = Enter/Exit fullscreen</span></span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:12px"><span style="color:#000000"><span style="font-family:Calibri,sans-serif"><span style="font-family:&quot;Helvetica&quot;,sans-serif">That&#39;s all for this article</span></span></span></span></p>\r\n\r\n<p>&nbsp;</p>	common-photoshop-shortuct-keys	2021-10-20 14:25:04.996+05:45	2022-01-23 19:41:48.788+05:45	f	published	1	0
10	Article	Private	Django Signal Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894564/mediafiles/Articles/djangosignalcheatsheet_cza4vu.png	<p>Django is a Python-based web framework that follows the MVT Design patterns which have become quite popular in the modern era.&nbsp; Below is the cheat sheet that can be referred to when you are working with projects. It can also be used for study purpose</p>\r\n\r\n<pre>\r\n<code>from typing import Tuple\r\nfrom django.db import models\r\nfrom django.contrib.auth.models import User\r\nfrom django.urls import reverse\r\nfrom django.db.models.fields import DecimalField\r\n\r\nfrom django.dispatch import receiver\r\nfrom django.db.models.signals import post_save\r\n\r\n\r\nclass Profile(models.Model):\r\n    user = models.OneToOneField(User, on_delete=models.CASCADE, null=True, blank=True) #cascade is for deleting the customer\r\n    first_name = models.CharField(max_length=10, null=True)\r\n    second_name=models.CharField(max_length=10,null=True)\r\n    email = models.EmailField(max_length=70, null=True,blank=True)\r\n\r\n    def __str__(self):\r\n        return str(self.user)\r\n\r\n@receiver(post_save, sender=User)\r\ndef create_profile(sender, instance,created,**kwargs):#Signal receivers must accept keyword arguments (**kwargs).\r\n    if created:\r\n        Profile.objects.create(user=instance)       \r\n\r\n@receiver(post_save, sender=Profile)\r\ndef update_or_create_seller(sender, instance, created, **kwargs):\r\n    if created:#if Profile is created also create seller\r\n        Seller.objects.create(\r\n            user=instance, \r\n            first_name=instance.first_name,\r\n            second_name=instance.second_name,\r\n            email=instance.email\r\n        )\r\n    else:  #Ifprofile is updated update seller\r\n        seller = Seller.objects.get(user=instance)\r\n        seller.user=instance\r\n        seller.first_name = instance.first_name\r\n        seller.second_name = instance.second_name\r\n        seller.email = instance.email\r\n        seller.save()    \r\n\r\n\r\n\r\nclass Seller(models.Model):\r\n    user = models.OneToOneField(Profile, on_delete=models.CASCADE, null=True, blank=True) #cascade is for deleting the customer\r\n    first_name = models.CharField(max_length=10, null=True)\r\n    second_name=models.CharField(max_length=10,null=True)\r\n    email = models.EmailField(max_length=70, null=True,blank=True)\r\n    auth_token = models.CharField(max_length=100,null=True )\r\n    is_verified = models.BooleanField(default=False)        \r\n\r\n    def __str__(self):\r\n        return str(self.user)\r\n#unless you define related_name in your OneToOneField, Django will use lowercased model name to #access related object. So, instance.user.seller should work.</code></pre>\r\n\r\n<p>&nbsp;</p>	django-signal-cheatsheet	2021-10-27 12:34:07.9+05:45	2021-12-14 21:18:48.604+05:45	f	published	1	0
11	Article	Private	Django Model Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636895478/mediafiles/Articles/djangomodelcheatsheet_d1jsvx.png	<p>Django is a Python-based web framework that follows the MVT Design patterns which have become quite popular in the modern era. Every model instance we create leads to the creation of a 2D table&nbsp; Below is the cheat sheet that can be referred to when you are working with projects.</p>\r\n\r\n<p>In <strong>models.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">from typing import Tuple\r\nfrom django.db import models\r\nfrom django.contrib.auth.models import User\r\nfrom django.urls import reverse\r\nfrom django.db.models.fields import DecimalField\r\nfrom django.dispatch import receiver\r\n\r\nfrom taggit.managers import TaggableManager\r\n\r\nfrom django.db.models.signals import post_save\r\n\r\nfrom django.utils import timezone\r\nclass Post (models.Model):\r\n\t#we have defined a custom manager that can give all the objects that are specific to something\r\n\t#i.e Post.newmanager.all() instead of Post.objects.all() \r\n\t\tclass NewManager(models.Manager):\r\n\t\t\tdef get_queryset(self):\r\n\t\t\t\treturn super().get_queryset() .filter(status='published')\r\n\r\n\t\toptions = (\r\n\t\t('draft', 'Draft'),\r\n\t\t('published', 'Published'),\r\n\t\t)\r\n\r\n\t\ttitle = models.CharField(max_length=250)\r\n\r\n\t\t#verbose_name is a name that's gonna be shown in database model see django admin\r\n\t\texcerpt = models.TextField(null=True,verbose_name="Short Text")\r\n\r\n\t\t#Django has a unique_for_date property you can set when adding a SlugField to your model. \r\n\t\t#This causes the slug to be unique only for the Date of the field you specify\r\n\t\tslug = models.SlugField(max_length=250, unique=True,unique_for_date='publish')\r\n                publish_date = models.DateField(default = datetime.date.today)  \r\n                last_updated=models.DateTimeField(default=timezone.now)\r\n\t\tauthor = models.ForeignKey (User, on_delete=models.CASCADE, related_name='blog_posts')\r\n\t\t#now through a custom defined related_name, it becomes post.blog_posts_set.all()    \r\n\t\ttags = TaggableManager()\r\n\t\tcontent = models.TextField()\r\n\t\tstatus = models.CharField(max_length=10, choices=options, default='draft')\r\n\r\n\t\tobjects = models.Manager() #default manager\r\n\r\n\t\tnewmanager = NewManager() #custom manager\r\n\r\n\r\n\t\tclass Meta:\r\n\t\t\tordering = ('-publish',)\r\n                        db_table='post'\r\n                        unique_together = (('slug','category'),)\r\n\r\n\t\tdef __str__(self):\r\n\t\t\treturn self.title\r\n\r\nclass Books(models.Model):\r\n\tname=models.CharField(null=True,verbose_name="Namei",max_length=100)\r\n\tbook_id=models.CharField(null=True,unique=True,verbose_name="bookeenId",max_length=100)\r\n\tcoupon=models.IntegerField(default=0)\r\n\r\nclass Profile(models.Model):\r\n\tuser = models.OneToOneField(User, on_delete=models.CASCADE, null=True, blank=True) #cascade is for deleting the customer\r\n\tfirst_name = models.CharField(max_length=10, null=True)\r\n\tsecond_name=models.CharField(max_length=10,null=True)\r\n\temail = models.EmailField(max_length=70, null=True,blank=True)\r\n\r\n\tdef __str__(self):\r\n\t\treturn str(self.user)\r\n\r\n@receiver(post_save, sender=User)\r\ndef create_profile(sender, instance,created,**kwargs):#Signal receivers must accept keyword arguments (**kwargs).\r\n\tif created:\r\n\t\tProfile.objects.create(user=instance)       \r\n\r\n@receiver(post_save, sender=Profile)\r\ndef update_or_create_seller(sender, instance, created, **kwargs):\r\n\tif created:#if Profile is created also create seller\r\n\t\tSeller.objects.create(\r\n\t\t\tuser=instance, \r\n\t\t\tfirst_name=instance.first_name,\r\n\t\t\tsecond_name=instance.second_name,\r\n\t\t\temail=instance.email\r\n\t\t)\r\n\telse:  #Ifprofile is updated update seller\r\n\t\tseller = Seller.objects.get(user=instance)\r\n\t\tseller.user=instance\r\n\t\tseller.first_name = instance.first_name\r\n\t\tseller.second_name = instance.second_name\r\n\t\tseller.email = instance.email\r\n\t\tseller.save()    \r\n\r\n\r\nclass Seller(models.Model):\r\n\tuser = models.OneToOneField(Profile, on_delete=models.CASCADE, null=True, blank=True) #cascade is for deleting the customer\r\n\tfirst_name = models.CharField(max_length=10, null=True)\r\n\tsecond_name=models.CharField(max_length=10,null=True)\r\n\temail = models.EmailField(max_length=70, null=True,blank=True)\r\n\tauth_token = models.CharField(max_length=100,null=True )\r\n\tis_verified = models.BooleanField(default=False)        \r\n\r\n\tdef __str__(self):\r\n\t\treturn str(self.user)\r\n\r\nclass Customer(models.Model):\r\n\tfirst_name = models.CharField(max_length=100,unique=True)\r\n\tlast_name = models.CharField(max_length=100,unique=True)\r\n\tage = models.IntegerField(null=True)\r\n\tclass Meta:\r\n\t\tindexes = [\r\n\t\t\tmodels.Index(fields=['last_name', 'first_name']),\r\n\t\t\tmodels.Index(fields=['first_name'], name='first_name_idx'),\r\n\t\t]\r\n\t\tconstraints = [\r\n\t\t\tmodels.CheckConstraint(check=models.Q(age__gte=18), name='age_gte_18'),\r\n\t\t\t#if age is below 18,Django throws an error\r\n\t\t]\r\n\r\n# Create your models here.\r\nclass Contact(models.Model):\r\n\tname=models.CharField(null=True,max_length=10)\r\n\temail=models.EmailField(null=True,max_length=40)\r\n\ttitle=models.CharField(null=True,max_length=10)\r\n\turl=models.CharField(null=True,max_length=50)\r\n\tslug=models.SlugField(null=True,max_length=100)\r\n\tdescription=models.CharField(null=True,max_length=100)\r\n\t \r\n\tdef __str__(self):\r\n\t\treturn "New Message from "+ self.name  \r\n\r\n\tdef get_absolute_url(self):\r\n\t\treturn  reverse('Forms:contact-details',kwargs={'slug':self.slug,'pk':self.pk})   \r\n\t\r\nclass AllForm(models.Model):\r\n\tTYPE_CHOICES = (\r\n\t\t('MALE', 'MALE'),\r\n\t\t('FEMALE', 'FEMALE'),                           \r\n\t)   \r\n\tgender=models.CharField(max_length=20, choices=TYPE_CHOICES,null=True)   \r\n\tname=models.CharField(null=True,max_length=10)\r\n\temail=models.EmailField(null=True,max_length=40)\r\n\tcomplete = models.BooleanField(null=True) \r\n\t\r\n\t\r\n\tage= models.IntegerField(null=True, blank=True)\r\n\tprice = models.DecimalField(max_digits=7, decimal_places=2)\r\n\t\r\n\tfile=models.FileField(upload_to="",null=True)\r\n\r\n\r\nimport uuid\r\nfrom django.db import models\r\n\r\nclass Transaction(models.Model):\r\n    name = models.CharField(max_length=50,null=True)\r\n    serialkey = models.UUIDField(primary_key = True,default = uuid.uuid4,editable = False)\r\n    published_date = models.DateTimeField(auto_now_add = True)\r\n    last_updated = models.DateTimeField(auto_now = True)\r\n \r\n\r\n\r\n\r\n\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>	django-model-cheatsheet	2021-10-01 12:36:09+05:45	2021-11-28 14:53:44.648+05:45	f	published	1	0
12	Article	Private	Django Import Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894563/mediafiles/Articles/djangoimportcheatsheet_osybdr.png	<p>In python, We can import Class modules, Variables, functions,&nbsp;etc from another file/folder or package within a file. What you need to at least know about&nbsp;the Python package is, It always has an __init__.py.&nbsp;Below is the cheat sheet that can be referred to when you are working with projects.</p>\r\n\r\n<pre>\r\n<code class="language-python">#IMPORT DEFAULT USER\r\nfrom django.contrib.auth.models import User\r\n\r\n#IMPORT TIMEZONE\r\nfrom django.utils import timezone\r\n\r\n#DJANGO URLS\r\nfrom django.urls import reverse\r\n\r\n#DJANGO GENERIC VIEWS\r\nfrom django.views.generic import TemplateView, ListView, UpdateView\r\n\r\n#DJANGO HTTP\r\nfrom django.http import JsonResponse, HttpResponse, HttpResponseRedirect\r\n\r\n#DJANGO SHORTCUTS\r\nfrom django.shortcuts import render, reverse, redirect, get_object_or_404, HttpResponseRedirect\r\n\r\n\r\n#DJANGO SIGNALS\r\nfrom django.db.models.signals import post_save\r\nfrom django.dispatch import receiver\r\n\r\n\r\n#DJANGO FORMS\r\nfrom django import forms\r\nfrom django.contrib.auth.forms import UserCreationForm\r\nfrom django.contrib.auth.models import User\r\n\r\n\r\n#DJANGO  AUTHENTICATION\r\nfrom django.contrib.auth import login, authenticate\r\n\r\n#DJANGO PAGINATOR\r\nfrom django.core.paginator import Paginator, EmptyPage, PageNotAnInteger\r\n\r\n</code></pre>	django-import-cheatsheet	2021-10-27 12:38:37+05:45	2021-11-28 14:09:07.874+05:45	f	published	1	0
13	Article	Private	Django MessageFrameWork CheatSheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894564/mediafiles/Articles/djangomessagescheatsheet_lqhdom.png	<p>Django has a messages framework that can be used for displaying messages when an event takes place.&nbsp; Below is the cheat sheet that can be referred to when you are working with messages. It can also be used for study purposes.</p>\r\n\r\n<p>In index.html</p>\r\n\r\n<pre>\r\n<code class="language-html">  &lt;div class="row"&gt;\r\n    {% for message in messages  %}    \r\n    {% if message.tags == "success" %}        \r\n    &lt;div class="{{ message.tags }} " style="background-color: rgb(157, 249, 18,.5);text-align: center; padding:1rem; color: white;" role="alert"&gt;\r\n          &lt;strong&gt;Message : {{ message }}&lt;/strong&gt;\r\n    &lt;/div&gt;\r\n    &lt;br&gt;\r\n    {% endif %}\r\n\r\n    {% if message.tags == "error" %}        \r\n    &lt;div class="{{ message.tags }} " style="background-color: rgba(255, 7, 7, 0.92);text-align: center; padding:1rem; color: white;" role="alert"&gt;\r\n          &lt;strong&gt;Message : {{ message }}&lt;/strong&gt;\r\n    &lt;/div&gt;\r\n    &lt;br&gt;\r\n    {% endif %}\r\n\r\n    {% endfor %}   \r\n    &lt;div class="col-sm-12"&gt;\r\n    &lt;main&gt;\r\n      &lt;br&gt;&lt;br&gt;\r\n      &lt;h2 class="text-center"&gt;Contact Us&lt;/h2&gt;\r\n      &lt;br&gt;\r\n\r\n      &lt;form action="{% url 'Contact_Us' %}" autocomplete="on" method="post"&gt;  \r\n      {% csrf_token %}\r\n        &lt;div class="form-group textcolor"&gt;\r\n          &lt;label style="color: white;" for="name"&gt;Name&lt;/label&gt;\r\n          &lt;input type="text" class="form-control" id="name" name="name" required autofocus&gt;\r\n          &lt;br&gt;\r\n        &lt;/div&gt;\r\n      \r\n\r\n          &lt;label style="color: white;" for="email"&gt;Email address&lt;/label&gt;\r\n          &lt;input type="email" class="form-control" id="email" name="email" aria-describedby="emailHelp" required&gt;\r\n          &lt;small  style="color: rgb(169, 169, 169);" id="emailHelp" class="form-text"&gt;You are requested to provide a Valid Email.&lt;/small&gt;\r\n          &lt;br&gt;\r\n\r\n        &lt;br&gt;\r\n\r\n        &lt;div class="form-group textcolor"&gt;\r\n          &lt;label style="color: white;" for="title"&gt;Title:&lt;/label&gt;\r\n          &lt;input type="text" class="form-control" id="title" name="title" required&gt;\r\n          &lt;br&gt;\r\n        &lt;/div&gt;\r\n      \r\n\r\n\r\n        &lt;div class="form-group textcolor"&gt;\r\n          &lt;label style="color: white;" for="content"&gt;Description :&lt;/label&gt;\r\n          &lt;textarea class="form-control" name="content" id="content" cols="30" rows="5" required&gt;&lt;/textarea&gt;\r\n          &lt;br&gt;\r\n        &lt;/div&gt;\r\n      \r\n        &lt;br&gt;\r\n        &lt;button type="submit" class="btn btn-primary"&gt;Submit&lt;/button&gt;\r\n        &lt;br&gt;\r\n        &lt;br&gt;  &lt;br&gt;&lt;br&gt;\r\n      &lt;/form&gt;\r\n    &lt;/main&gt;\r\n    \r\n    &lt;/div&gt;\r\n  &lt;/div&gt;</code></pre>	django-messageframework-cheatsheet	2021-08-04 12:41:40+05:45	2021-11-28 14:12:58.346+05:45	f	published	1	0
14	Article	Private	Django Settings Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894564/mediafiles/Articles/djangosettingscheatsheet_j43wso.png	<p>Django is a Python-based web framework that follows the MVT Design patterns which have become quite popular in the modern era.&nbsp;Below is the cheat sheet that can be referred to when you are working with projects. It can also be used for study purposes.</p>\r\n\r\n<p>In <strong>settings.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">\r\nALLOWED_HOSTS = ['.herokuapp.com','localhost','127.0.0.1']\r\n\r\nMIDDLEWARE = [\r\n    'whitenoise.middleware.WhiteNoiseMiddleware', \r\n]\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        \r\n        'DIRS': [os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'templates'),],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\r\nSTATIC_URL = '/staticfiles/'  #meaning- static url is /static/ which is set and appears in url section .we dont need to mention statiic path in codes(links)\r\n\r\n#FOR LOADIN STATIC FILES\r\nSTATICFILES_DIRS=[          #needed dnt chnage\r\n    os.path.join(BASE_DIR, 'staticfiles')  \r\n    ]\r\n\r\n#staticfiles is a folder name which we define in a directory .\r\n#This code implies that there is folder name staicfiles from which images, js ,cs are to be fetched.\r\n#STATICFILES_DIRS is necesary for displaying images, css js from a folder(in this project 'staticfiles') that we define    \r\n\r\nSTATIC_ROOT=os.path.join(BASE_DIR, 'static')\r\n\r\n#FOR SAVING IMAGES INTO THE 'static/images'\r\nMEDIA_URL ='/mediafiles/'  #your url path\r\nMEDIA_ROOT =os.path.join(BASE_DIR, 'staticfiles/mediafiles')  \r\n#meaning- Suppose you define a imagefield in customer model in models.py . So, for the image to be upload and save on the datatbase\r\n# we need to specify a path where the images are gonna be layed down. \r\n\r\n#WHITENOISE CONFIGURATION\r\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\r\n\r\n\r\n\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>In <strong>urls.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">#for acessing media url\r\nfrom django.conf.urls.static import static\r\nfrom django.conf import settings\r\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)  </code></pre>\r\n\r\n<p>&nbsp;</p>	django-settings-cheatsheet	2021-10-27 12:45:57.976+05:45	2021-12-14 21:19:00.473+05:45	f	published	1	0
15	Article	Public	How to Dockerize your Django Application?	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894562/mediafiles/Articles/djangoanddocker_ip8vlv.png	<p><strong>Step1</strong>: Install Docker Desktop&nbsp;from the Docker official site.&nbsp;<a href="https://www.docker.com/get-started">Click here</a>&nbsp;to visit it.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; You can run the command to check if it&#39;s correctly installed:</p>\r\n\r\n<pre>\r\n<code>docker run hello-world</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2</strong>: Install python with pipenv followed by installing Django with it.</p>\r\n\r\n<pre>\r\n<code>pipenv install</code></pre>\r\n\r\n<pre>\r\n<code>pipenv install django&lt;version_name&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3: </strong>Activate the Virtual Environment and start the Django project.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<pre>\r\n<code>django-admin startproject EPostgresDjango .</code></pre>\r\n\r\n<p><strong>Step4</strong>: Create a Dockerfile</p>\r\n\r\n<p>In <strong>Dockerfile</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">#Pull base image\r\nFROM python:3.9\r\n\r\n# Set environment variables\r\nENV PYTHONDONTWRITEBYTECODE 1\r\nENV PYTHONUNBUFFERED 1\r\n\r\n# Set work directory\r\nWORKDIR /DPortfolio\r\n\r\n# Install dependencies\r\nCOPY Pipfile Pipfile.lock /DPortfolio/\r\nRUN pip install pipenv &amp;&amp; pipenv install --system\r\n# Copy project\r\nCOPY . /DPortfolio/</code></pre>\r\n\r\n<p><br />\r\n<strong>Step5:</strong> <strong>docker-compose.yml </strong>configuration:</p>\r\n\r\n<p>a) For default SQLite database</p>\r\n\r\n<pre>\r\n<code>version: '3.9'\r\nservices:\r\n web:\r\n  build: .\r\n  command: python /DPortfolio/manage.py runserver 0.0.0.0:8000\r\n   volumes:\r\n     - .:/DPortfolio\r\n   ports:\r\n     - 8000:8000</code></pre>\r\n\r\n<p><br />\r\nb) For the Postgres database</p>\r\n\r\n<pre>\r\n<code>version: '3.9'\r\nservices:\r\n web:\r\nbuild: .\r\ncommand: python /DPortfolio/manage.py runserver 0.0.0.0:8000\r\n volumes:\r\n - .:/DPortfolio\r\nports:\r\n- 8000:8000\r\n depends_on:\r\n- db\r\n db:\r\nimage: postgres:11\r\n environment:\r\n POSTGRES_USER: postgres\r\nPOSTGRES_PASSWORD: postgres\r\n POSTGRES_DB: postgres\r\n POSTGRES_PORT: 5432\r\n\r\nIn settings.py\r\nDATABASES = {\r\n'default': {\r\n'ENGINE': 'django.db.backends.postgresql',\r\n 'NAME': 'postgres',\r\n 'USER': 'postgres',\r\n'PASSWORD': 'postgres',\r\n 'HOST': 'db',\r\n 'PORT': 5432\r\n}\r\n}</code></pre>\r\n\r\n<p>&nbsp; Note: Bear in mind that&nbsp;DPortfolio is a working directory containing all the project files and folders. The above&nbsp;settings for the database have nothing to do with the pgadmin database instead it&nbsp;will be used up for volumes in Docker Desktop.</p>\r\n\r\n<p><strong>Step6</strong>: Build a container of the image &nbsp;in detached mode by running a command:</p>\r\n\r\n<pre>\r\n<code>docker-compose up -d</code></pre>\r\n\r\n<p><br />\r\n<strong>Step7:</strong>&nbsp;Install psycopg2-binary and psycopg2 with docker-compose exec web pipenv</p>\r\n\r\n<pre>\r\n<code>docker-compose exec web pipenv install psycopg2-binary==2.9.1</code></pre>\r\n\r\n<pre>\r\n<code>docker-compose exec web pipenv install psycopg2==2.9.1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step8:</strong> Rebuild the Container of the image since&nbsp; We install these new packages for the database connectivity. This is imp for every new definition of packages in&nbsp; Pipfile and Pipfile.lock</p>\r\n\r\n<pre>\r\n<code>docker-compose up -d --build</code></pre>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n<strong>Useful Commands</strong><br />\r\nLet us inspect Docker. It will contain a lot of output</p>\r\n\r\n<pre>\r\n<code>docker info</code></pre>\r\n\r\n<p>shows you build logs</p>\r\n\r\n<pre>\r\n<code>docker-compose logs</code></pre>\r\n\r\n<p>build up the existing image considering the necessary changes</p>\r\n\r\n<pre>\r\n<code>docker-compose up -d --build</code></pre>\r\n\r\n<p>stop the container of an image.</p>\r\n\r\n<pre>\r\n<code>docker-compose down▀</code></pre>\r\n\r\n<p>sync default SQLite database table with Postgres database table</p>\r\n\r\n<pre>\r\n<code>python manage.py migrate --run-syncdb</code></pre>\r\n\r\n<p>building docker for production only.&nbsp;</p>\r\n\r\n<pre>\r\n<code>docker-compose -f docker-compose-prod.yml up -d --build</code></pre>\r\n\r\n<p>Some Python commands with docker</p>\r\n\r\n<pre>\r\n<code>docker-compose exec web python manage.py startapp Forms</code></pre>\r\n\r\n<pre>\r\n<code>docker-compose exec web python manage.py migrate</code></pre>\r\n\r\n<pre>\r\n<code>docker-compose exec web python manage.py createsuperuser</code></pre>\r\n\r\n<p>What you need to know:<br />\r\n&nbsp; &nbsp; &nbsp;-&gt;&nbsp;<strong>docker-compose exec web</strong> is a prefix used to run python commands. Make sure you have activated the virtual env.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Must Install&nbsp;&nbsp;Packages&nbsp;with pipenv</strong></p>\r\n\r\n<p>1. psycopg2-binary</p>\r\n\r\n<pre>\r\n<code>docker-compose exec web pipenv install psycopg2-binary==2.9.1</code></pre>\r\n\r\n<p>2. Whitenoise</p>\r\n\r\n<pre>\r\n<code>docker-compose exec web pipenv install whitenoise==5.3.0</code></pre>\r\n\r\n<p>2. Gunicorn</p>\r\n\r\n<pre>\r\n<code>docker-compose exec web pipenv install gunicorn==20.1.0</code></pre>\r\n\r\n<p>3. dj-databse-url</p>\r\n\r\n<pre>\r\n<code>docker-compose exec web pipenv install dj-database-url==0.5.0</code></pre>	how-to-dockerize-your-django-application	2021-10-27 13:10:51.027+05:45	2022-02-08 13:30:52.681095+05:45	f	published	1	0
18	Article	Private	Django Form Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894563/mediafiles/Articles/djangoformcheatsheet_qfcmie.png	<p>Forms are the one and only way to send the data to the server. Django Built-in <strong>ModelForm</strong> automatically creates a model in the database defining a form containing fields associated with the model&#39;s instance fields.&nbsp;<br />\r\n<strong>Note</strong>: <u>forms.ModelForm</u> has get_cleaned_data() and save() method while <u>forms.Form </u>doesn&#39;t.<br />\r\n<strong>UserCreationForm</strong> allows us to create a default User model&nbsp;with the fields that we specify on class Meta.&nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>In <strong>forms.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">from django import forms\r\nfrom django.forms import fields\r\nfrom django.contrib.auth.forms import UserCreationForm  \r\nfrom .models import AllForm, User\r\nfrom.models import Contact\r\n\r\n\r\n#UserCreation using UserCreationForm\r\nclass UserRegistration(UserCreationForm):\r\n\r\n    #defining custom fields to User model\r\n    password1 = forms.CharField(\r\n        label="Password",\r\n        widget=forms.PasswordInput(attrs={'class':'pass', 'type':'password', 'align':'center', 'placeholder':'Enter a password'}),\r\n    )\r\n    password2 = forms.CharField(\r\n        label="Confirm password",\r\n        widget=forms.PasswordInput(attrs={'class':'pass', 'type':'password', 'align':'center', 'placeholder':'Reenter  the password'}),\r\n    )   \r\n\r\n    class Meta:\r\n        model = User\r\n        fields = ['username','email','password1','password2']\r\n        widgets = {\r\n            'username': forms.TextInput(attrs={'class': 'col-sm-12','placeholder':'Enter your Name'}),\r\n            'email': forms.EmailInput(attrs={'class': 'col-sm-12','placeholder':'Enter a valid Email'}),\r\n        }\r\n        \r\n'''\r\n password1 and password2 are custom fields on the UserCreationForm\r\nsince they do not exist as model fields on the Default User model. \r\nMeta. You will need to redefine these fields and their widgets in your form to apply widgets.  \r\n'''  \r\n\r\n\r\n#FileValidatorForm using FileExtensionValidator\r\nclass ImageForm(ModelForm):\r\n    ALLOWED_TYPES = ['jpg', 'jpeg', 'png', 'gif']\r\n\r\n    class Meta:\r\n        model = Profile\r\n        fields = ['image', ]\r\n\r\n    def clean_avatar(self):\r\n        image = self.cleaned_data.get('image', None)\r\n        if not avatar:\r\n            raise forms.ValidationError('Missing image file')\r\n        try:\r\n            extension = os.path.splitext(image.name)[1][1:].lower()\r\n            if extension in self.ALLOWED_TYPES:\r\n                return avatar\r\n            else:\r\n                raise forms.ValidationError('File types is not allowed')\r\n        except Exception as e:\r\n            raise forms.ValidationError('Can not identify file type')\t\r\n\r\n\r\n#CommentForm using mptt.forms\r\nfrom mptt.forms import TreeNodeChoiceField\t\r\nclass NewCommentForm(forms.ModelForm):\r\n    parent = TreeNodeChoiceField(queryset=AComment.objects.all())\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n\r\n        self.fields['parent'].widget.attrs.update(  #remove the select option\r\n            {'class': 'd-none'})\r\n        self.fields['parent'].label = ''\r\n        self.fields['content'].label = ''#remove the label element for parent(text wont appear)\r\n        self.fields['parent'].required = False #to remove input required atttribute for parent so its gonna be optional\r\n\r\n    class Meta:\r\n        model = AComment\r\n        fields = ( 'parent',  'content')\r\n\r\n        widgets = {\r\n            'name': forms.TextInput(attrs={'class': 'col-sm-12'}),\r\n            'content': forms.Textarea(attrs={'class': 'form-control','placeholder':'Your Comment'}),\r\n        }\r\n\r\n    def save(self, *args, **kwargs):\r\n        AComment.objects.rebuild()\r\n        return super(NewCommentForm, self).save(*args, **kwargs)\r\n\r\n\r\n\r\n#Forms using forms.ModelForm\r\nclass ContactUpdate(forms.ModelForm):\r\n  class Meta:\r\n    model=Contact\r\n    fields=['name','email','title','url','description']\r\n\r\n\r\nclass ProfileForm(forms.ModelForm):\r\n    error_messages = {\r\n\t\t'required': ugettext_lazy("This field is mandatory."),\r\n\t\t'invalid': 'Enter a valid number',\r\n\t\t'caps': 'This field if case sensitive' \r\n\t\t}\r\n\r\n    esewa_id = forms.CharField(error_messages=error_messages,\r\n     label='Esewa_Id',\r\n     help_text='This information will be used only for payment purpose.',\r\n     widget=forms.NumberInput(attrs={'class':'NumberField', 'type':'number', 'placeholder':'Enter your Esewa_Id'}),\r\n\r\n     )\r\n    class Meta:\r\n\t    model=Customer\r\n\t    fields = ['first_name','second_name','email','image','gender','esewa_id']\r\n\r\n\r\n\r\n#Creating Forms using forms.Form\r\nclass ArticleSearchForm(forms.Form):\r\n    q = forms.CharField()\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n\r\n        self.fields['q'].label = ''\r\n        self.fields['q'].widget.attrs.update(\r\n            {'class': 'form-control','placeholder':'Search the Articles...'})\r\n\r\nclass ContactForm(forms.Form):\r\n    name=forms.CharField()\r\n    email=forms.EmailField()\r\n    subject=forms.CharField()\r\n    message = forms.CharField(widget=forms.Textarea)\r\n    \r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        \r\n        self.fields['name'].label = ''\r\n        self.fields['name'].widget.attrs.update(\r\n            {'class': 'form-control','id':'name','placeholder':'Enter Your Name.'})   \r\n       \r\n        self.fields['email'].label = ''\r\n        self.fields['email'].widget.attrs.update(\r\n            {'class': 'form-control','id':'email','placeholder':'Enter Your Email.'})\r\n\r\n        self.fields['subject'].label=''\r\n        self.fields['subject'].widget.attrs.update(\r\n            {'class': 'form-control','id':'subject','placeholder':'Subject'}\r\n        )          \r\n        self.fields['message'].label=''\r\n        self.fields['message'].widget.attrs.update(\r\n            {'class': 'form-control','id':'message','rows':5,'placeholder':'Your Message'}\r\n        )     \r\n        \r\nclass EmailSubscriptionForm(ModelForm):\r\n      class Meta:\r\n          model=EmailSubscription\r\n          fields=('email',)\r\n\r\n          widgets = {\r\n                'email': forms.EmailInput(attrs={'placeholder':'Your Email Here'}),\r\n            }       \r\n\r\n\r\n\r\n\r\n\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>	django-form-cheatsheet	2021-10-01 15:34:39+05:45	2022-01-24 18:54:02.1+05:45	f	published	1	0
19	Article	Public	Deploy your Django application to Heroku using Github	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894562/mediafiles/Articles/DeployWithGithub_vtup8h.png	<p>So, You did some Django project&nbsp;and you want to deploy it?. Here&#39;s a question where to deploy? , how to deploy? and what is the cost of it?.&nbsp;In this article, I am going to show how you can deploy your Django app in Heroku using GitHub. If You don&rsquo;t know about GitHub and Heroku.</p>\r\n\r\n<p>Here&rsquo;s short info:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>Heroku:</strong> It is the Platform as a Service-based cloud platform that helps developers to deploy their application easily and quickly without any infrastructures headaches, investing money in hardware, maintenance, and issues of Databases, and so on.</p>\r\n\r\n<p>Why Choose Heroku?</p>\r\n\r\n<p>It does have a free plan(no cost) for beginners, students, startup companies which is enough to get started with and know how things flow.</p>\r\n\r\n<p><strong>GitHub</strong>: On the other hand, GitHub is a web-based application designed for developers to maintain their software (along with teams) and is best known for version control using Git.</p>\r\n\r\n<p>First, create an account on Heroku and GitHub if you haven&rsquo;t.</p>\r\n\r\n<p><strong>Step1</strong>: Create a repository on GitHub for your Django project.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image1_zza8ji" style="height:400px; width:722px" /></p>\r\n\r\n<p>All your repositories will reside on the left-hand side of the page. Click on the New button on the top-left side of the page.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image2_emtkdj" style="height:624px; width:720px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>It will send you to a different page. On the page, Mention the name of your repository. Choose any one from two options (Private or Public) . Then, Click on Create repository button. &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2</strong>: On your Vscode (any other text editor, git bash shell&hellip;) terminal, Run the command to create a git repository in your local machine.</p>\r\n\r\n<pre>\r\n<code>▀ git init</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3</strong>: Clone your remote repository on your local machine.</p>\r\n\r\n<pre>\r\n<code>git clone &lt;copied_url&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image3_bf1vtv" style="height:400px; width:720px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step4: </strong>Heroku requires two files i.e requirements.txt and procfile must for deployment on Heroku.</p>\r\n\r\n<p>Run the following command to make a list of packages that are required for running your project:</p>\r\n\r\n<pre>\r\n<code>pip freeze &gt; requirements.txt</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For procfile, run a command to make a file named procfile:</p>\r\n\r\n<pre>\r\n<code>touch procfile</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>procfile must look like this:</p>\r\n\r\n<pre>\r\n<code>web: gunicorn &lt;django_project_name&gt;.wsgi</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step5:</strong> Run the command to add all the files of your project</p>\r\n\r\n<pre>\r\n<code>git add .</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step6:</strong> Then, Run the following command to make a commit.</p>\r\n\r\n<pre>\r\n<code>git commit -m "Project Initialized"</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step7:</strong> Then, Push your local code to the master branch of your remote repository using the command:</p>\r\n\r\n<pre>\r\n<code>git push origin master</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step8:</strong> This is the last step in which we will create an app and deploy it connecting to GitHub.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image5_p5xah3" style="height:500px; width:720px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image4_fu0qjz" style="height:500px; width:720px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Then, click on the New button followed by Create new app button.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image6_vfvqmf" style="height:300px; width:720px" /></p>\r\n\r\n<p>All your apps are listed on the page. Then, click on your app name.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image7_aynrz9" style="height:340px; width:720px" /></p>\r\n\r\n<p>There are different section that is responsible for certain purpose. For now, Click on Deploy section.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image8_zncjbo" style="height:400px; width:720px" /></p>\r\n\r\n<p>Then, Choose the Deployment method as GitHub.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image9_zv2llf" style="height:200px; width:720px" /></p>\r\n\r\n<p>Search for your git repository and then connect it.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2021/11/14/image10_vkreq8" style="height:400px; width:720px" /></p>\r\n\r\n<p>Then, Click on Enable automatic Deploys button. This will automatically deploy for the changes that you make to your remote git repository and Click on the Deploy branch button.</p>	deploy-your-django-application-to-heroku-using-github	2021-08-05 13:22:21+05:45	2022-03-26 15:30:34.021087+05:45	f	published	1	1
20	Article	Private	Github Command Cheatsheet	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894566/mediafiles/Articles/githubcommandcheatsheet_auqlk3.png	<p>Github is a web-based application used by millions of developers to maintain their software and work with teams efficiently.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Below is the top GitHub command that can boost up your development and version control speed. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Required Command for initial setup and running git command globally</p>\r\n\r\n<pre>\r\n<code>git config --global user.email "Youremail@gmail.com"</code></pre>\r\n\r\n<pre>\r\n<code>git config --global user.name "YourName"</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//create a local git repository on your local machine&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n\r\n<pre>\r\n<code>git init</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Gives you information about the commits(i.e What you have committed...)</p>\r\n\r\n<pre>\r\n<code>git status</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Add single file to be tracked</p>\r\n\r\n<pre>\r\n<code>git add file1.txt</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Add all files to be tracked to the staging area</p>\r\n\r\n<pre>\r\n<code>git add .</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Transfer tracked files from staging area to local repository</p>\r\n\r\n<pre>\r\n<code>git commit -m "Project Initialized."</code></pre>\r\n\r\n<p>Note: A commit is nothing but changes which is referred to by its hash which is generated using an SHA-1 hash algorithm with all of the above, plus a NUL terminated header with the word commit and the length of the commit.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//add and commit in a single command</p>\r\n\r\n<pre>\r\n<code>git commit -am "Project Initialized."</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//History about Commits made in files/folder.</p>\r\n\r\n<pre>\r\n<code>git log</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Information about Changes applied in files/folder in oneline.</p>\r\n\r\n<pre>\r\n<code>git log --oneline</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Switch to another branch &#39;main&#39;</p>\r\n\r\n<pre>\r\n<code>git checkout main</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Clone or Copy remote git repository into your local machine</p>\r\n\r\n<pre>\r\n<code>git clone url</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Connect to the remote repository</p>\r\n\r\n<pre>\r\n<code>git remote add origin url</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Push all tracked files of the local repository to the remote repository.</p>\r\n\r\n<pre>\r\n<code>git push origin master</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Keek track of changes that you made from remote repository to local repository.</p>\r\n\r\n<pre>\r\n<code>git pull origin master</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-size:14px"><strong>Branching</strong></span></p>\r\n\r\n<p>Branching is done to carry out various works without affecting the master&nbsp;branch. So, If anything goes wrong in that branch we can simply delete it.&nbsp;Later on, we merge the master branch with another branch when work is approved or simply bring new updates to the master branch.</p>\r\n\r\n<pre>\r\n<code>git branch branch1</code></pre>\r\n\r\n<p>Note: This command copies every file of the master branch to the new branch.</p>\r\n\r\n<p>//For viewing the branches of your local repositroy, you need to run the following command:</p>\r\n\r\n<pre>\r\n<code>git branch</code></pre>\r\n\r\n<p>Note: 1. But if you switch to the branch that exists in the remote repository then the above command will also view branches of&nbsp; the remote repository.</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2. Remote branches will be displayed in red color.</p>\r\n\r\n<p>//To display both remote and local branches, run:</p>\r\n\r\n<pre>\r\n<code>git branch -a</code></pre>\r\n\r\n<p>&nbsp;//To display both remote&nbsp;branches, run:</p>\r\n\r\n<pre>\r\n<code>git branch -r</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Switch to another branch &#39;branch1&#39;</p>\r\n\r\n<pre>\r\n<code>git checkout branch1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Instead of using the two commands above, you can just run the&nbsp;<kbd>git checkout</kbd>&nbsp;command with the&nbsp;<kbd>-b</kbd>&nbsp;option to create a new branch and checkout to it:</p>\r\n\r\n<pre>\r\n<code>git checkout -b branch1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//To push the local branch to the remote repository, you should run the git push command by specifying the branch name (Name of remote is the origin, which is by default):</p>\r\n\r\n<pre>\r\n<code>git push -u origin &lt;new-branch-name&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//merge default branch(master) with create one(branch1) with fast-forwarding</p>\r\n\r\n<pre>\r\n<code>git merge branch1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//merge default branch(master) with create one(branch1) without fastforwading</p>\r\n\r\n<pre>\r\n<code>git merge --no--ff branch1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//lends Information about merge branch</p>\r\n\r\n<pre>\r\n<code>git branch --merged</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Information about unmerged branch</p>\r\n\r\n<pre>\r\n<code>git branch --no-merged</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Takes you to the desired commit</p>\r\n\r\n<pre>\r\n<code>git reset --hard &lt;hashvalue&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Delete the &#39;main&#39; branch of the local repository(merging is required).</p>\r\n\r\n<pre>\r\n<code>git branch -d main</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Delete the &#39;main&#39; branch of the local repository(merging is not required).</p>\r\n\r\n<pre>\r\n<code>git branch -D main</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//Delete the &#39;main&#39; branch of the remote repository.</p>\r\n\r\n<pre>\r\n<code>git push origin -d main</code></pre>\r\n\r\n<p><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Or</p>\r\n\r\n<pre>\r\n<code>git push --set -upstream origin main</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Renaming a Branch</h3>\r\n\r\n<p>For renaming a&nbsp;<kbd>git branch</kbd>, you need to run the following command:</p>\r\n\r\n<pre>\r\n<code>git branch -m &lt;old-branch-name&gt; &lt;new-branch-name&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h1><span style="font-size:20px"><strong>Pull Requests, Fast-Forward Merge, and Conflict Solution</strong></span></h1>\r\n\r\n<p>Conflict takes place on pushing to the origin master making commits after more than one user makes different changes in one single file. The optimal solution for the conflicts is to&nbsp;make a new branch and then pull the changes that recently took place in the remote repository to that branch. Then, we finally merge it to the master branch. If you directly pull the changes to the master branch(default branch) then, we can&#39;t solve Conflict Problems.</p>\r\n\r\n<p>It can be solved in VsCode which has a debugger for it.</p>\r\n\r\n<p>Then, Vscode will highlight lines with options available. Choose one and that&#39;s it. Suppose, you chose to accept both changes then, What you need to do after, is to create a commit for it and push to the origin.</p>\r\n\r\n<p><span style="font-size:14px"><strong>FastForward Merge</strong></span></p>\r\n\r\n<p>Fast forward merge can be performed when there is a direct linear path from the source branch to the target branch. In fast-forward merge, git simply moves the source branch pointer to the target branch pointer without creating an extra merge commit.</p>\r\n\r\n<p>Let us look at an example of implementing fast-forward merge.</p>\r\n\r\n<p>We have a master branch with 3 commits.</p>\r\n\r\n<p><img src="https://www.tutorialspoint.com/assets/questions/media/51681/master_branch.jpg" style="height:251.167; width:472px" /></p>\r\n\r\n<p>Next, we create a branch called the feature branch. In git, a branch is nothing but a pointer to a commit. At this point, both feature and master are pointing to the same commit.</p>\r\n\r\n<p><img src="https://www.tutorialspoint.com/assets/questions/media/51681/master.jpg" style="height:456px; width:600px" /></p>\r\n\r\n<p>Now let us switch to the feature branch and do a couple of commits. Now we need to bring the changes to the master branch. There is a linear path from feature to master.</p>\r\n\r\n<p><img src="https://www.tutorialspoint.com/assets/questions/media/51681/master1.jpg" style="height:318px; width:600px" /></p>\r\n\r\n<p>In order to merge the changes to the master branch, all git has to do is to change the pointer of the master forward. This is what we call fast-forward merge.</p>\r\n\r\n<p><img src="https://www.tutorialspoint.com/assets/questions/media/51681/master2.jpg" style="height:322px; width:600px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For Example</p>\r\n\r\n<p>Suppose, Person1&nbsp;has&nbsp;made some changes in file1.txt present in the master branch&nbsp;from the remote repository. Similarly, Person2 has made some changes to the same file of the same branch&nbsp;in his local computer. When&nbsp;&nbsp;Person2 runs the git push command, he/she will see conflict errors. For this, Person 2 will have to&nbsp;carry out the following steps.</p>\r\n\r\n<p>First, run the command to make a new branch. We are gonna pull the changes in this branch, not the default branch(master):</p>\r\n\r\n<pre>\r\n<code>git branch branch1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Then Switch to the branch1</p>\r\n\r\n<pre>\r\n<code>git checkout branch1\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Run&nbsp;the pull command to pull the changes to branch 1</p>\r\n\r\n<pre>\r\n<code>git pull origin master</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Then, switch back&nbsp;to the master</p>\r\n\r\n<pre>\r\n<code>git checkout master</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Finally, we merge the master branch with branch1.</p>\r\n\r\n<pre>\r\n<code>git merge branch1</code></pre>\r\n\r\n<p>Note, Merging sets the id of the master branch to id of branch1. You can find out by git log command.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp;</p>	github-command-cheatsheet	2021-07-06 17:17:09+05:45	2022-02-03 18:21:38.254+05:45	f	published	1	0
22	Article	Public	How to connect Godaddy domain to any Heroku app	https://res.cloudinary.com/dcgrv6shk/image/upload/v1641192321/mediafiles/Articles/domainconnecttoheroku_x5v8ax.png	<p>In this article, I am gonna teach you how you can connect your GoDaddy domain to any Heroku app. For the demonstration, I have deployed my Django project in the Heroku platform on the free tier.&nbsp;</p>\r\n\r\n<p>Let&#39;s dive into the procedure.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>Step1:</strong> Add the&nbsp;Godaddy domain in&nbsp; Heroku Settings section. I have added a dimensionalillusions.com domain with the prefix &#39;www&#39;.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture8_w1mree" style="height:180px; width:722px" /></p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture4_nblxf1" style="height:501px; width:323px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2</strong>: Copy the DNS target and make a&nbsp; CNAME record in Godaddy&nbsp;&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture5_ltechl" style="height:171px; width:722px" /></p>\r\n\r\n<p>&nbsp; &nbsp;We paste the DNS target in the value attribute of the record. So that, It can point to the .herokuapp.com.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture6_cs3o58" style="height:298px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3</strong>: Add Domain forwarding which can be done under&nbsp;the DNS page of Godaddy.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture7_ipmcep" style="height:381px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture8_df1vxn" style="height:565px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step4</strong>: Add the domain in ALLOWED_HOST of your Django project in Github.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture_bmcmxq" style="height:94px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You better&nbsp;remove the Heroku domain that Heroku provides and localhost. That&#39;s not supposed to be in the Production up and running apps. Godaddy will take some minutes since we are forwarding the domain to http://www.dimensionalillusions.com.So, When you just type &#39;dimensionalillusions.com&#39; the browser will forward you to the forwarding domain. That&#39;s all for this article.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>	how-to-connect-godaddy-domain-to-any-heroku-app	2022-01-02 13:29:20.699+05:45	2022-01-23 19:42:44.076+05:45	f	published	1	0
39	Article	Private	Pyenv	\N	<h2>Why should you use&nbsp;<code>pyenv</code>&nbsp;and Virtual Python Environments?</h2>\r\n\r\n<p>As a programmer, either employed at a company, freelancer or even as a hobbyist, you usually work on multiple programming projects simultaneously. And most of those projects require different Python versions and depend on other modules like a particular version of&nbsp;<code>numpy</code>, for example. Or, if you created a Python module yourself and want to validate that it runs correctly on different Python versions, you need a way to install several Python versions on your system. And sometimes, you want to take a sneak at the latest Python release candidate but don&rsquo;t want to ruin your production system.</p>\r\n\r\n<p>For all those situations,&nbsp;<code>pyenv</code>&nbsp;and virtual environments (<code>venv</code>) offer an easy solution for installing different Python versions on your system and setting up environments with other requirements.</p>\r\n\r\n<p>In this article and the accompanying Youtube videos, you learn how to install and set up&nbsp;<code>pyenv</code>&nbsp;and&nbsp;<code>venv</code>&nbsp;under Windows 10, macOS, and Ubuntu Linux and how to use it with VSCode.</p>\r\n\r\n<h2>Installing pyenv</h2>\r\n\r\n<h3>Windows 10/11</h3>\r\n\r\n<p><code>pyenv</code>&nbsp;actually started as a tool for Unix platforms such as Linux and macOS; however, there is an excellent Windows 10/11 port of it which can be found in this GitHub repository:&nbsp;<a href="https://github.com/pyenv-win/pyenv-win">https://github.com/pyenv-win/pyenv-win</a></p>\r\n\r\n<p>Installing&nbsp;<code>pyenv-win</code>&nbsp;is not very straightforward due to how Windows 10/11 and PowerShell works, but if you follow those steps, it shouldn&rsquo;t be too much of a hassle:</p>\r\n\r\n<ol>\r\n\t<li>Download&nbsp;<code>pyenv-win</code>&nbsp;ZIP-archive:&nbsp;<a href="https://github.com/pyenv-win/pyenv-win/archive/master.zip">pyenv-win</a></li>\r\n\t<li>Create a new folder&nbsp;<code>.pyenv</code>&nbsp;in your user folder with the name&nbsp;<code>.pyenv</code>. You can do this using the Explorer or the following PowerShell command:\r\n\t<table>\r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code> mkdir $HOME/.pyenv\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\t</li>\r\n\t<li>Extract the ZIP-archive and copy the&nbsp;<code>pyenv-win</code>&nbsp;folder and the&nbsp;<code>.version</code>&nbsp;file from the&nbsp;<code>pyenv-win-master</code>&nbsp;folder into the newly created&nbsp;<code>.pyenv</code>&nbsp;folder in your user folder.</li>\r\n\t<li>Set the environment variables&nbsp;<code>PYENV</code>&nbsp;and&nbsp;<code>PYENV_HOME</code>&nbsp;that point to the installation folder:\r\n\t<table>\r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>1\r\n2\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>[System.Environment]::SetEnvironmentVariable('PYENV',$env:USERPROFILE + "\\.pyenv\\pyenv-win\\","User")\r\n[System.Environment]::SetEnvironmentVariable('PYENV_HOME',$env:USERPROFILE + "\\.pyenv\\pyenv-win\\","User")\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\t</li>\r\n\t<li>Add the&nbsp;<code>bin</code>&nbsp;folder to the&nbsp;<code>PATH</code>&nbsp;variable. Such that&nbsp;<code>pyenv</code>&nbsp;can be found when using the command line.\r\n\t<table>\r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>[System.Environment]::SetEnvironmentVariable('path', $env:USERPROFILE + "\\.pyenv\\pyenv-win\\bin;" + $env:USERPROFILE + "\\.pyenv\\pyenv-win\\shims;" + [System.Environment]::GetEnvironmentVariable('path', "User"),"User")\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\t</li>\r\n\t<li>Close the current PowerShell.</li>\r\n\t<li>If you haven&rsquo;t enabled script execution yet, start a new PowerShell with admin privileges by right-clicking on the PowerShell icon in the start menu and choose&nbsp;<em>Run as administrator</em>. Otherwise, skip ahead to step 9.&nbsp;<img alt="Run PowerShell as administrator" src="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/run_powershell_as_admin.PNG" /></li>\r\n\t<li>Enter the following command into the PowerShell to enable the execution of scripts:\r\n\t<table>\r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code> Set-ExecutionPolicy unrestricted\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\r\n\t<p>And press&nbsp;<code>A</code>&nbsp;to choose&nbsp;<em>Yes to ALL</em>. Afterward, you can close this PowerShell window and open a new one without admin privileges.&nbsp;<a href="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/set_powershell_execution_policy.PNG" title=""><img alt="Set PowerShell execution policy" src="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/set_powershell_execution_policy.PNG" /></a></p>\r\n\t</li>\r\n\t<li>Now, you can run&nbsp;<code>pyenv</code>&nbsp;by entering:\r\n\t<table>\r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code> pyenv\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\r\n\t<p><a href="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/pyenv_help_in_powershell.PNG" title=""><img alt="Run pyenv help in the PowerShell" src="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/pyenv_help_in_powershell.PNG" /></a>&nbsp;If you encounter a security warning from where you have to choose if you want to run&nbsp;<code>pyenv</code>&nbsp;you can disable this warning by &ldquo;unblocking&rdquo; the pyenv script with the following command:</p>\r\n\r\n\t<table>\r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t<pre>\r\n<code> Unblock-File $HOME/.pyenv/pyenv-win/bin/pyenv.ps1\r\n</code></pre>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\t</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Using pyenv</h2>\r\n\r\n<p>After you successfully installed&nbsp;<code>pyenv</code>&nbsp;it is time to look at the different commands that&nbsp;<code>pyenv</code>&nbsp;offers to manage different Python versions.</p>\r\n\r\n<p>Probably the most important command is:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv install [PYTHON_VERSION]\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>With this command, you can install a specific Python version on your system. To see all versions that are available to install enter:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv install -l\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>This will print out a very long list on your terminal (depending on your operating system) of Python versions you can install. And it is not just the standard CPython versions. There is also&nbsp;<a href="https://en.wikipedia.org/wiki/PyPy"><code>pypy</code></a>, which is an implementation of Python in Python itself. Or&nbsp;<code>anaconda</code>, which is very popular in the sciences and data mining. Pick your preferred Python version and use&nbsp;<code>pyenv install</code>&nbsp;to install it on your system.</p>\r\n\r\n<p>To see which versions you already installed on, enter the following command into your terminal:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv versions\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>This command will list all the Python versions that you can choose from&nbsp;<code>pyenv</code>. The version that is currently active has an asterisk (<code>*</code>) in front of it:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>  system\r\n  3.10.0rc1\r\n* 3.9.6 (set by /home/konze/Programming/ml_acc_timing_model_extraction/.python-version)\r\n  pypy3.7-7.3.5\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>If you want to know which Python version is currently active in your shell, just type:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv version\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Now, after you installed several different versions, how do you set a specific version? To select a default Python version that is active when you open a new terminal, you use the&nbsp;<code>global</code>&nbsp;command:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv global [PYTHON_VERSION]\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Ensure to enter the exact name of the installed Python version shown when you enter&nbsp;<code>pyenv versions</code>. Alternatively to&nbsp;<code>pyenv global [PYTHON_VERSION]</code>, you can also set an environment variable (Unix only)&nbsp;<code>PYENV_VERSION</code>&nbsp;with:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>export PYENV_VERSION=[PYENV_VERSION]\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>If you want to set a specific Python version for your current terminal session, use:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv shell [PYTHON_VERSION]\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>This will set the Python version only as long as your session is active. So after you close your terminal, everything is back to default.</p>\r\n\r\n<p>To set a project Python version that is active as soon as you &ldquo;<code>cd</code>&rdquo; into the project directory, enter the following when you are inside of the project&rsquo;s root directory:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>pyenv local [PYTHON_VERSION]\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>This will create the file&nbsp;<code>.python-version</code>&nbsp;that contains the&nbsp;<code>[PYTHON_VERSION]</code>. You can even check that by entering&nbsp;<code>pyenv versions,</code>&nbsp;and it will tell you based on what setting the currently active Python version was selected.</p>\r\n\r\n<p>Of course, there are more&nbsp;<code>pyenv</code>&nbsp;commands, but I won&rsquo;t go into those in this article. You can find a complete command reference over here:&nbsp;<a href="https://github.com/pyenv/pyenv/blob/master/COMMANDS.md">pyenv Command Reference</a>.</p>\r\n\r\n<h2>Creating Virtual Environments</h2>\r\n\r\n<p>The real power of Python comes from its vast amount of modules ranging from graph theory to machine learning. To install those modules, the&nbsp;<code>pip</code>&nbsp;command is used. If you are using&nbsp;<code>pyenv</code>&nbsp;and you enter pip:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>which pip\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>and for Windows PowerShell:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>get-command pip\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>It will show you that pip is called from the&nbsp;<code>.pyenv</code>&nbsp;directory. And if you install a module using&nbsp;<code>pip</code>&nbsp;it is installed into your&nbsp;<code>.pyenv</code>&nbsp;directory tied to the currently active version. So if you install&nbsp;<code>numpy</code>&nbsp;while your current Python version is 3.9.6&nbsp;<code>numpy</code>&nbsp;won&rsquo;t be available when you switch to&nbsp;<code>anaconda3-2021.05</code>. However, this granularity might not be enough, and you need a project-based distinction between different modules. And virtual environments do exactly that for you.</p>\r\n\r\n<p>To create a new virtual environment for your project, open a terminal in your project&rsquo;s root directory. Make sure you set your desired Python version for this project using&nbsp;<code>pyenv local [PYTHON_VERSION]</code>&nbsp;then enter:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>python -m venv .venv\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>This command will create a new directory&nbsp;<code>.venv</code>&nbsp;which includes the Python interpreter (provided by&nbsp;<code>pyenv</code>) and all the modules installed using&nbsp;<code>pip</code>&nbsp;later on. After creating the newly created virtual environment, you have to activate it. This is done by entering:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>source .venv/bin/activate\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>and for Windows PowerShell:</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>".\\\\.venv\\\\Scripts\\\\activate"\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Now a&nbsp;<code>(.venv)</code>&nbsp;string will appear in front of your command line. After you activate the virtual environment, you can check with&nbsp;<code>which python</code>&nbsp;or&nbsp;<code>get-command python</code>&nbsp;that is now called from the&nbsp;<code>.venv</code>&nbsp;directory. And when you use&nbsp;<code>pip</code>, it also installs all modules into the&nbsp;<code>.venv</code>&nbsp;directory. In the rare case you messed up your virtual environment, you can delete the&nbsp;<code>.venv</code>&nbsp;directory and create a new one with&nbsp;<code>python -m venv .venv</code>.</p>\r\n\r\n<h2>&nbsp;</h2>\r\n\r\n<h2>Using Virtual Environments with VSCode</h2>\r\n\r\n<p>Now that you successfully installed&nbsp;<code>pyenv</code>&nbsp;and set up virtual environments, I will show you in this section how to tell VSCode to activate virtual environments by default for your Python projects.</p>\r\n\r\n<p>When you open your Python project directory with VSCode and create a virtual environment, it won&rsquo;t activate it by default. To do this, you have to open the workspace&nbsp;<code>settings.json</code>&nbsp;with&nbsp;<strong>Ctrl+Shift+P</strong>&nbsp;or&nbsp;<strong>Cmd+Shift+P</strong>&nbsp;on macOS and enter&nbsp;<strong>settings.json</strong>.</p>\r\n\r\n<p><a href="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/vscode_settings_json.PNG" title=""><img alt="Open Workspace settings.json" src="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/vscode_settings_json.PNG" /></a></p>\r\n\r\n<p>This will create a new file&nbsp;<code>.vscode/settings.json</code>&nbsp;in your project&rsquo;s root directory. When you now run your Python application, it will automatically activate your virtual environment. In the newly created&nbsp;<code>settings.json</code>&nbsp;enter the new value</p>\r\n\r\n<table>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>1\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<pre>\r\n<code>"python.terminal.activateEnvironment": true\r\n</code></pre>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><a href="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/vscode_activate_environment.PNG" title=""><img alt="Activate Environment" src="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/vscode_activate_environment.PNG" /></a></p>\r\n\r\n<p>And when you now run your Python program in VSCode it will automatically activate your virtual environment.</p>\r\n\r\n<p><a href="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/vscode_environment_automatically_activated.PNG" title=""><img alt="Run with virtual environment" src="https://k0nze.dev/assets/posts/install-pyenv-venv-vscode/vscode_environment_automatically_activated.PNG" /></a></p>	pyenv	2022-01-24 22:27:37.564+05:45	2022-01-24 22:27:37.564+05:45	f	published	1	0
17	Article	Public	Django Multiple Database Setup	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894563/mediafiles/Articles/djangomultipledatabase_roxi8d.png	<p>This article covers up how you can set up multiple databases in any&nbsp;Django project. This Multiple Database approach is much more efficient&nbsp;in the case of Large-Scale projects like E-Commerce, Social, Educational websites, etc. So To begin with, This article is not for Django newbies. I am&nbsp;assuming you know the basics of Python and Django and you have built at least some simple Django projects(like crud, todo, portfolio) already.</p>\r\n\r\n<p><strong>Step1:</strong> In the main directory that contains <strong>manage.py</strong>,<br />\r\nCreate a &#39;routers&#39; named folder followed by creating db_routers.py inside it.(You can give any name you prefer)<br />\r\n<br />\r\nIn <strong>db_routers.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">class AuthRouter:\r\n    """\r\n    A router to control all database operations on models in the\r\n    auth and content types applications.\r\n    """\r\n    route_app_labels = {'auth', 'contenttypes', 'admin', 'sessions'}\r\n\r\n    def db_for_read(self, model, **hints):\r\n        """\r\n        Attempts to read auth and content types models go to auth_db.\r\n        """\r\n        if model._meta.app_label in self.route_app_labels:\r\n            return 'auth_db'\r\n        return None\r\n\r\n    def db_for_write(self, model, **hints):\r\n        """\r\n        Attempts to write auth and content types models go to auth_db.\r\n        """\r\n        if model._meta.app_label in self.route_app_labels:\r\n            return 'auth_db'  #database name\r\n        return None\r\n\r\n    def allow_relation(self, obj1, obj2, **hints):\r\n        """\r\n        Allow relations if a model in the auth or contenttypes apps is\r\n        involved.\r\n        """\r\n        if (\r\n            obj1._meta.app_label in self.route_app_labels or\r\n            obj2._meta.app_label in self.route_app_labels\r\n        ):\r\n            return True\r\n        return None\r\n\r\n    def allow_migrate(self, db, app_label, model_name=None, **hints):\r\n        """\r\n        Make sure the auth and contenttypes apps only appear in the\r\n        'auth_db' database.\r\n        """\r\n        if app_label in self.route_app_labels:\r\n            return db == 'auth_db'\r\n        return None\r\n\r\nclass SchoolRouter:\r\n    route_app_labels = {'Mschool'}#Mclub is name of app.Note we haven't mention 'auth', 'contenttypes', 'admin', 'sessions since this database will only handle certain app database.\r\n\r\n    def db_for_read(self, model, **hints):\r\n        if model._meta.app_label in self.route_app_labels:\r\n            return 'school_db'\r\n        return None\r\n\r\n    def db_for_write(self, model, **hints):\r\n        if model._meta.app_label in self.route_app_labels:\r\n            return 'school_db'\r\n        return None\r\n\r\n    def allow_migrate(self, db, app_label, model_name=None, **hints):\r\n        if app_label in self.route_app_labels:\r\n            return db == 'school_db'\r\n        return None\r\n\r\nclass ClubRouter:\r\n    route_app_labels = {'Mclub'}#Mclub is name of app.Note we haven't mention 'auth', 'contenttypes', 'admin', 'sessions since this database will only handle certain app database.\r\n\r\n    def db_for_read(self, model, **hints):\r\n        if model._meta.app_label in self.route_app_labels:\r\n            return 'club_db'\r\n        return None\r\n\r\n    def db_for_write(self, model, **hints):\r\n        if model._meta.app_label in self.route_app_labels:\r\n            return 'club_db'\r\n        return None\r\n\r\n    def allow_migrate(self, db, app_label, model_name=None, **hints):\r\n        if app_label in self.route_app_labels:\r\n            return db == 'club_db'\r\n        return None</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2:</strong> Configure DATABASE and DATABASE_ROUTERS in <strong>settings.py</strong></p>\r\n\r\n<p>In <strong>settings.py</strong></p>\r\n\r\n<pre>\r\n<code class="language-python">DATABASES = {\r\n    'default':{\r\n    #default is a must\r\n    },\r\n    'auth_db': {  #auth_db is the name of database\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    },\r\n    'school_db':{\r\n         'ENGINE': 'django.db.backends.sqlite3',\r\n         'NAME': BASE_DIR / 'school.db.sqlite3',       \r\n    },\r\n    'club_db': {\r\n        'NAME': 'club',\r\n        'ENGINE': 'django.db.backends.postgresql',\r\n        'USER': 'postgres',\r\n        'PASSWORD': 'ProgrammerGodRobo123',\r\n        'PORT': 5432\r\n    },\r\n}\r\n\r\nDATABASE_ROUTERS = [\r\n    #syntax:'path.to.router'\r\n    'routers.db_routers.AuthRouter',   #AuthRouter accessed from routers folder\r\n    'routers.db_routers.SchoolRouter',    \r\n    'routers.db_routers.ClubRouter',\r\n]</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3:</strong> Now, We migrate all the tables to our main database&nbsp;</p>\r\n\r\n<pre>\r\n<code>python manage.py migrate --database=auth_db</code></pre>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; Note: auth_db refers to the name of the database<br />\r\n&nbsp;<br />\r\n<strong>Step4:</strong> Then, We create a superuser in our main database which is auth_db in this example</p>\r\n\r\n<pre>\r\n<code>python manage.py createsuperuser --database=auth_db</code></pre>\r\n\r\n<p><big><strong>Did You Notice?:&nbsp;</strong></big></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; Step3 and Step4 are the two&nbsp;commands that are always executed&nbsp;during the initial setup of any Django project.&nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n\r\n<p><br />\r\n<strong>Step5:</strong> Run the local server</p>\r\n\r\n<pre>\r\n<code>python manage.py runserver</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><big><strong>Extras:</strong></big>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\nEvery time you make changes to database models, Run the following command in sequence.</p>\r\n\r\n<p>&nbsp;&nbsp;#checks&nbsp;for databases&nbsp;changes</p>\r\n\r\n<pre>\r\n<code>python manage.py makemigrations▀</code></pre>\r\n\r\n<p>&nbsp;#migrate changes to the desired database</p>\r\n\r\n<pre>\r\n<code>python manage.py migrate --database=database_alias_name</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Getting objects from specific database<br />\r\n&nbsp; &nbsp; data = Blue.objects.using(&#39;blue_db&#39;).all()&nbsp;</p>	django-multiple-database-setup	2021-10-27 14:33:46+05:45	2022-02-08 13:24:47.013357+05:45	f	published	1	0
24	Article	Public	Deploy your Django application to AWS LightSail	https://res.cloudinary.com/dcgrv6shk/image/upload/v1641912593/mediafiles/Articles/deploydjangoonAwsLightsail_doweah.png	<p>Amazon Lightsail is one of the popular and most used services offered by Amazon to deploy, run and scale your applications&nbsp;on a Virtual Private Server in a matter of few minutes.&nbsp;It&nbsp;is powered to distribute&nbsp;a higher&nbsp;level of security, reliability, and scalability you are expecting from AWS. Recently,&nbsp; AWS has brought some new updates to the services allowing you to deploy containerized applications on the cloud. For the demonstration of how to deploy on&nbsp;the Lightsail, I will deploy a Django application on AWS Lightsail.</p>\r\n\r\n<p><br />\r\nStep1: Search for Lightsail service and click on it.&nbsp;</p>\r\n\r\n<p>Step2: You will be redirected to a nice&nbsp;interface of Lightsail greeting you!. Click on Create instance button.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture1_u77lg4" style="height:422px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step3: Choose a region that is close to you. AWS Lightsail only accepts certain regions. Prefer Documentation for that.&nbsp;By creating your instances in separate Availability Zones, you protect your applications from failure in a single location. Lightsail images are available on two platforms: Linux/Unix and Windows. Select&nbsp;Linux/Unix&nbsp;platform, followed by selecting Django&nbsp;blueprint.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture2_su9icp" style="height:476px; width:500px" /></p>\r\n\r\n<p>Step4. Then, Click on change SSH key pair manager.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Create a new SSH key pair manager by clicking on create new button. Download the Generated key.<br />\r\n&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture3_uanxts" style="height:123px; width:439px" /></p>\r\n\r\n<p>Step5: If you are a new customer AWS offers free plans for Lightsail. I am selecting a $5USD per month plan that comes with&nbsp;1GB RAM,1 Processor, 40GB ROM, and up to 1TB Data Transfer</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture31_jmud9d" style="height:268px; width:589px" /></p>\r\n\r\n<p>Step6: Include a unique&nbsp;Name for the Instance&nbsp;and click on Create instance button.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture4_yp1rk3" style="height:404px; width:658px" /></p>\r\n\r\n<p>Step7: Now, You have successfully created a Lightsail&nbsp;Instance. To see your app, click on your instance and just paste the public IP address in the browser.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture5_ot07ou" style="height:232px; width:500px" /></p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture6_y8jgbo" style="height:256px; width:600px" /></p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture7_ge1bww" style="height:469px; width:712px" /></p>\r\n\r\n<p>Step8: Hold on, this is not the end. We haven&#39;t deployed the Django app on Lightsail yet. Download Filezilla Client from the official site. In short, It allows you to connect to&nbsp;the remote server and carry out various tasks such as crud operations, uploading files and folders to the server, etc.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/10/capture12_scis1f" style="height:327px; width:710px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step9: Go&nbsp;to Edit and left-click on settings. It will pop up an interface in which you&#39;ll have to provide a private key in order to connect to the server. Click on Add Key file button and Choose the .pem file of Lightsail Instance. Then Click on Ok Button.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/10/capture13_wpsbne" style="height:584px; width:710px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step10: Go to File and click on Site Manager. Click on the new site button and mention the name for your site. Set the Protocol to SFTP, Host to the public Ip of Lightsail Instance, User to bitnami, and click on Connect Button.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/10/capture15_x5xqi0" style="height:391px; width:710px" /></p>\r\n\r\n<p>Step11: Visit htdocs directory of the remote server. I have uploaded ProductManagementSystem from my local computer to the remote server inside the htdocs directory.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/10/capture16_fngvhw" style="height:249px; width:710px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/10/capture17_tvc0lc" style="height:214px; width:710px" /></p>\r\n\r\n<p>Step12: Go to Networking Section and Add a new rule that has a port 8000(a default port that Django uses).</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture8_ojnbim" style="height:328px; width:535px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step13: Then, Visit Connect Section and&nbsp;Click on Connect using SSH button. This will open a browser-based Command-line interface.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture10_lydu80" style="height:265px; width:600px" /></p>\r\n\r\n<p>Step14: We have to include the Public Ip address in ALLOWED_HOSTS of settings.py. Run the following command in sequence.</p>\r\n\r\n<pre>\r\n<code>cd htdocs</code></pre>\r\n\r\n<pre>\r\n<code>cd ProductManagementSystem</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The following nano&nbsp;command will open the settings.py file in which we are going to perform a write operation by including the Public IP on ALLOWED_HOSTS.</p>\r\n\r\n<pre>\r\n<code>nano settings.py</code></pre>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/06/capture11_gdw4wi" style="height:284px; width:600px" /></p>\r\n\r\n<p>Press Ctrl +O and hit Enter key to write to the file.&nbsp;You&#39;ll see &#39;wrote 12.. lines&#39; in the command prompt.<br />\r\nPress Ctrl+X to exit from the nano editor.</p>\r\n\r\n<p>Step15: Lastly, Run the following command to run the server.</p>\r\n\r\n<pre>\r\n<code>python manage.py runserver 0.0.0.0:8000</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Tada, It worked!!</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/10/capture18_rchpmp" style="height:399px; width:710px" /></p>\r\n\r\n<p>&nbsp;</p>	deploy-your-django-application-to-aws-lightsail	2022-01-06 11:08:28.299+05:45	2022-03-25 21:45:23.04484+05:45	f	published	1	1
21	Article	Public	Serve Django Mediafiles using Cloudinary	https://res.cloudinary.com/dcgrv6shk/image/upload/v1637573973/mediafiles/Articles/servedjangousingcloudinary_v8zzml.png	<p>&nbsp;Django does serve static files but if you want to serve dynamic media files like videos, images then you would consider googling for hours but still couldn&#39;t find a solution. In this article, I am going to show&nbsp;how you can use Cloudinary to serve Django media files. Let&#39;s break down this into steps.</p>\r\n\r\n<p>Step1: Install&nbsp;&nbsp;&#39;cloudinary_storage&#39; package running the command:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<pre>\r\n<code>pipenv install django-cloudinary-storage</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step2: Mention&nbsp; it in INSTALLED_APPS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<pre>\r\n<code>INSTALLED_APPS = [\r\n    # ...\r\n    'taggit';     \r\n    'cloudinary_storage',\r\n    'django.contrib.staticfiles',\r\n    'cloudinary',\r\n    # ...\r\n]</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step3: In <strong>settings.py</strong>, Add the following lines of code</p>\r\n\r\n<pre>\r\n<code>\r\nMEDIA_ROOT =os.path.join(BASE_DIR, 'staticfiles/mediafiles')\r\nMEDIA_URL ='/mediafiles/'\r\n\r\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step4: In <strong>models.py</strong>, Create a model</p>\r\n\r\n<pre>\r\n<code>from django.db import models\r\n\r\ndef article_image_directory_path():\r\n    return 'Articles/'\r\n\r\nclass Article(models.Model):  \r\n    title=models.CharField(max_length=250, null=True)\r\n    thumbnail = models.Field(upload_to=article_image_directory_path(), null=True, blank=True)\r\n    </code></pre>\r\n\r\n<p>&nbsp;</p>	serve-django-mediafiles-using-cloudinary	2021-11-14 19:40:42.885+05:45	2022-03-25 21:51:23.860656+05:45	f	published	1	107
6	Article	Public	Virtual Environment with pipenv	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894565/mediafiles/Articles/VirtualEnvironmentWithPipenv_zvawq9.png	<p>Pipenv is a tool used to manage the packages required for a Python project. With this Python package you can:<br />\r\n-&gt; Automatically create or delete the virtual environment.<br />\r\n-&gt; Install, uninstall, and update packages that store the desired versions.<br />\r\n-&gt; Quickly set up Python operating system.<br />\r\n-&gt; Have a list of installed packages and compatible versions.<br />\r\nIf you use Pipenv for your projects, you will have two special files in the root folder, both of which are automatically generated and converted.<br />\r\nThese are:<br />\r\nPipfile: A file that specifies packages installed in your virtual environment for development and use.<br />\r\nPipfile.lock: With Pipenv, it is very easy to work on projects with other developers using the same packages and versions as it provides files that contain all that information.</p>\r\n\r\n<p>Developers should simply use the command to have the same location on their computer. The great thing about Pipenv is that When you create a virtual environment with Pipenv if your project contains the required file.txt it will automatically lock dependencies in the Pipfile.lock and&nbsp;install it in Pipfile.</p>\r\n\r\n<p>It was built because of the shortcomings of thousands of virtualenv.<br />\r\nTo install pipenv, you need to install the pip first.</p>\r\n\r\n<p>Step 1: Initially, Install the pipenv package with a pipe if you have not already done so.</p>\r\n\r\n<pre>\r\n<code>pip install pipenv</code></pre>\r\n\r\n<p>Step 2: Create a visual environment with the following command</p>\r\n\r\n<pre>\r\n<code>pipenv --python 3.9.6 or pipenv install</code></pre>\r\n\r\n<p>Note: It will create a virtual environment with python using the Python version that you have already installed on your Computer.<br />\r\nVirutal Environment Default Location: -C: \\ Users \\ &lt;username&gt; \\. Virtualevs \\</p>\r\n\r\n<p>This is what the newly built Pipfile looks like:</p>\r\n\r\n<pre>\r\n<code>[[source]]\r\nurl = "https://pypi.org/simple"\r\nverify_ssl = true\r\nname = "pypi"\r\n\r\n[packages]\r\ndjango-drip-campaigns = "*"\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = "3.8"</code></pre>\r\n\r\n<p><br />\r\nWhat you need to know: - &gt;&gt; The installed packages needed to be able to cross your project fall under [Packages] regularly.</p>\r\n\r\n<p>To remove the virtual environment you created, use the following command</p>\r\n\r\n<pre>\r\n<code>pipenv --rm</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To activate the virtual environment, just run:</p>\r\n\r\n<pre>\r\n<code>pipenv shell</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To deactivate</p>\r\n\r\n<pre>\r\n<code>exit</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Some Practical Commands</p>\r\n\r\n<p>&nbsp;1. Generates&nbsp;a requirements.txt file with Pipenv</p>\r\n\r\n<pre>\r\n<code>pipenv lock --requirements &gt; requirements.txt</code></pre>\r\n\r\n<p><br />\r\n2. Install the recent&nbsp;version of the package.</p>\r\n\r\n<pre>\r\n<code>pipenv install &lt;package name&gt;</code></pre>\r\n\r\n<p><br />\r\n3. Install a specified version of a package.</p>\r\n\r\n<pre>\r\n<code>pipenv install &lt;package name&gt;==&lt;package version&gt;</code></pre>\r\n\r\n<p><br />\r\n4. Uninstall a package.</p>\r\n\r\n<pre>\r\n<code>pipenv uninstall &lt;package name&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n.</p>	virtual-environment-with-pipenv	2021-09-14 15:05:51+05:45	2022-04-02 20:59:44.912909+05:45	f	published	1	68
23	Article	Public	How to Setup Budget Alerts on AWS	https://res.cloudinary.com/dcgrv6shk/image/upload/v1641192318/mediafiles/Articles/AWSBudgetAlerts_a9jqra.png	<p>If you run EC2 instances, use&nbsp;Lightsail services, etc without knowing about AWS billing and regions,&nbsp;You&#39;&#39;ll get gigantic charges from AWS&nbsp;you never could think&nbsp;of. That&#39;s not what you want though. You would like to have a notification or have an idea about how much I have spent on what services? or get a notification when you are gonna get charged&nbsp;when the Used Services exceeds its limit. So, That&#39;s where the AWS budget comes into play. Creating Budget Alerts in AWS helps you to get notified about billing. The process is simple.</p>\r\n\r\n<p><strong>Step1:</strong>&nbsp;Go to Billing Dashboard.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture11_lnlide" style="height:400px; width:554px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2</strong>: Click on the Budgets on the left sidebar.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture12_bchey0" style="height:303px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3</strong>: Now, We are on the page that allows us to create&nbsp;a Budget.</p>\r\n\r\n<p>Click on Create budget button</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture13_hefveu" style="height:155px; width:722px" /></p>\r\n\r\n<p>Choose the Budget type to Cost budget since we want to track the utilization of costs against a specific amount and receive alerts on mails when thresholds are met.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture14_a6qlsd" style="height:380px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture15_faj1ue" style="height:472px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture16_q8ghbs" style="height:172px; width:722px" /></p>\r\n\r\n<p>After Setting the Budget amount, the next step is to add an alert threshold which plays an important role in notifying us about the bills, budgets, budgets reports, etc.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture17_tnbdcb" style="height:182px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture18_kjr91l" style="height:413px; width:722px" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture19_pjvbb9" style="height:391px; width:722px" /></p>\r\n\r\n<p>When you used up 80% of the amount that you allow&nbsp;for your budget, A&nbsp;notification will be pushed to every Email recipient.</p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture20_rekv8w" style="height:348px; width:722px" /></p>\r\n\r\n<p><img alt="" src="https://res.cloudinary.com/dcgrv6shk/image/upload/v1/mediafiles/ckeditor/uploads/2022/01/02/capture21_mjyvwk" style="height:60px; width:722px" /></p>	how-to-setup-budget-alerts-on-aws	2022-01-02 15:39:58.249+05:45	2022-04-05 14:34:50.595885+05:45	f	published	1	1
8	Article	Public	Heroku Postgres Backup and load Data	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636894564/mediafiles/Articles/herokupostgresBackup_drxfgn.png	<p>In this article, I am gonna tell you how you can backup&nbsp;data of production level, load it to local development, and update&nbsp;the data back to the production level. I am assuming you already have basic knowledge about fixtures and json files&nbsp;that will be used to do so.</p>\r\n\r\n<h2><strong>Backup Data of Production level</strong></h2>\r\n\r\n<p><strong>Step1</strong>: At First, log in&nbsp;to Heroku CLI.</p>\r\n\r\n<pre>\r\n<code>heroku login</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color:#2c3e50"><strong>Step2</strong>: Run the command to create a backup of the data</span></p>\r\n\r\n<pre>\r\n<code>heroku pg:backups:capture</code></pre>\r\n\r\n<p><span style="color:#2c3e50"><span style="background-color:#ffffff">You can run a command</span></span>&nbsp;</p>\r\n\r\n<pre>\r\n<code>heroku pg:backups:info </code></pre>\r\n\r\n<p><span style="color:#2c3e50"><span style="background-color:#ffffff">to check out information about the backup.</span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color:#2c3e50"><strong>Step3</strong>: Run the following command.which&nbsp;will create latest.dump file.</span></p>\r\n\r\n<pre>\r\n<code>heroku pg:backups:download</code></pre>\r\n\r\n<p><br />\r\n<span style="color:#2c3e50"><strong>Step4</strong>:Now, We dump the file into our local Postgres database by the following command.</span></p>\r\n\r\n<pre>\r\n<code>pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myuser -d mydb latest.dump</code></pre>\r\n\r\n<p><span style="color:#2c3e50">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Note: Make sure, You have open pg admin. Otherwise, this won&#39;t work.</span></p>\r\n\r\n<p>Now, Run the local server. You can see production-level data Is shown on the server.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>Migrate local-level data to Production level</strong></h2>\r\n\r\n<p><strong>Step1:</strong>&nbsp;We will dump all local data into json file by running the command</p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata --format json --indent 4 --exclude auth.permission --exclude contenttypes &gt; data.json</code></pre>\r\n\r\n<p><span style="background-color:#ffffff">Note:data.json encoding must be set to utf-8. I&nbsp;have excluded auth.permission and contenttypes&nbsp;because content type gets collided with unrelated foreign keys. These raise errors&nbsp;in loading data to the Heroku PostgreSQL database. So make sure of it.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step2</strong>: Now, add the json file(Assuming you already have set up a git repository)</p>\r\n\r\n<pre>\r\n<code>git add .</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step3</strong>: Now, make a commit for the file which will be later tracked in the local repository.</p>\r\n\r\n<pre>\r\n<code>git commit -m "Project Up to Date"</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step4</strong>: Then, push it to the git repository.</p>\r\n\r\n<pre>\r\n<code>git heroku push &lt;branch name&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step5</strong>: Now, load the json file with Heroku.</p>\r\n\r\n<pre>\r\n<code>heroku run python manage.py loaddata data.json</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n<span style="color:#000000"><strong><span style="background-color:#ffffff">SOME USEFUL COMMANDS</span></strong></span></p>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">//IN ORDER TO DUMP/BACKUP DATA FROM DATABASE INTO JSON FILE.</span></span></p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata &gt; data.json</code></pre>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">//TO DUMP DATA OF A PARTICULAR DJANGO APP</span></span></p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata MArticles▀&gt; data.json</code></pre>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">//TO DUMP DATA OF PARTICULAR DJANGO TABLE OF AN APP</span></span></p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata Marticles.Comment &gt; data.json </code></pre>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">&nbsp; &nbsp;Note: Comment is a model in Marticles app</span></span></p>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">//TO EXCLUDE SOME TABLE FROM BEING DUMP</span></span></p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata --format json --indent 4 --exclude Blog.category&gt;data.json</code></pre>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">//TO GET DATA IN READABLE FORMAT</span></span></p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata --indent 4&gt;data.json</code></pre>\r\n\r\n<p><span style="color:#000000"><span style="background-color:#ffffff">//FLUSH ENTIRE DATA</span></span></p>\r\n\r\n<pre>\r\n<code>py manage.py flush</code></pre>\r\n\r\n<p>&nbsp;</p>	heroku-postgres-backup-and-load-data	2021-10-19 21:57:33.461+05:45	2022-03-25 21:43:36.177624+05:45	f	published	1	11
7	Article	Public	Virtual Environment with virtualenv	https://res.cloudinary.com/dcgrv6shk/image/upload/v1636896357/mediafiles/Articles/virtualenvironmentwithvirtualenv_lg3elr.png	<p>Open Command Prompt in a directory that you want to set up a Virtual Environment for your project.<br />\r\nStep1: Install virtualenv package</p>\r\n\r\n<pre>\r\n<code>pip install virtualenv ▀</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Step2: Run the command</p>\r\n\r\n<pre>\r\n<code>python -m venv environment_name</code></pre>\r\n\r\n<p>to create a virtual environment</p>\r\n\r\n<p><br />\r\n&nbsp; &nbsp;i.e E:\\Django\\VirtualEnvironment&gt;python -m venv VirtualEnv&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Or<br />\r\n&nbsp; &nbsp;i.e E:\\Django\\VirtualEnvironment&gt;virtualenv VirtualEnv&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />\r\nTO ACTIVATE VIRTUAL ENVIRONMENT<br />\r\n&nbsp;Virtual\\Scripts\\activate.bat &nbsp;&nbsp;</p>\r\n\r\n<p><br />\r\nStep4: Install a desired Django framework version</p>\r\n\r\n<pre>\r\n<code>pip install django&lt;version_name&gt;</code></pre>\r\n\r\n<p>//SETUP DJANGO PROJECT INSIDE VIRTUAL ENVIRONMENT FOLDER<br />\r\nStep5: Start the Django project by running the following command</p>\r\n\r\n<pre>\r\n<code>django-admin startproject Project_name</code></pre>\r\n\r\n<p>//Open VsCode<br />\r\nStep5: code.</p>\r\n\r\n<p><br />\r\nStep6:Run the following command as administrator if this is your first project with virtualenv.</p>\r\n\r\n<pre>\r\n<code>set-ExecutionPolicy Unrestricted</code></pre>\r\n\r\n<p>Note: To run the .as1 file, We have to change the Execution policy running Windows PowerShell as administrator</p>\r\n\r\n<p>Step6:We didn&#39;t install pip while installing python in Virtual Environment. So, We now install pip for installing packages for the Django project by running the command:</p>\r\n\r\n<pre>\r\n<code>python -m ensurepip --upgrade</code></pre>\r\n\r\n<p>To activate the virtual environment</p>\r\n\r\n<pre>\r\n<code>activate</code></pre>\r\n\r\n<p>For Reactivating, Specify the path.For eg</p>\r\n\r\n<pre>\r\n<code>e:/Django/VirtualEnvironment/Virtual/Scripts/Activate.ps1</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>Summary</strong></h2>\r\n\r\n<p>We are creating a virtual environment and then using pip to install packages, and then manually calling pip freeze to save what&#39;s been installed. What if you didn&rsquo;t have to make this a two-part process? What if you could merge pip with <strong>virtualenv</strong>.This is possible through <strong>pipen</strong>v. That&#39;s one of&nbsp;the major reasons why it got replaced by <strong>pipenv</strong>. But, there are still many developers who are still using it. I will write an article on it. Stay tuned!</p>	virtual-environment-with-virtualenv	2021-11-05 15:07:02+05:45	2022-03-25 21:45:09.704462+05:45	f	published	1	45
\.


--
-- Data for Name: article_bookmarks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.article_bookmarks (id, article_id, profile_id) FROM stdin;
16	8	1
17	9	1
18	11	1
19	14	1
20	20	1
\.


--
-- Data for Name: article_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.article_category (id, article_id, category_id) FROM stdin;
49	6	1
50	8	1
51	9	13
52	12	1
53	14	1
54	15	1
55	15	7
56	16	1
57	17	1
58	19	8
59	21	1
60	22	8
61	23	10
62	23	7
63	24	8
64	24	10
65	7	1
\.


--
-- Data for Name: article_views; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.article_views (id, article_id, visitior_id) FROM stdin;
7	8	5
8	7	5
9	24	5
10	21	5
11	19	5
12	6	5
13	23	5
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add media	7	add_media
26	Can change media	7	change_media
27	Can delete media	7	delete_media
28	Can view media	7	view_media
29	Can add profile	8	add_profile
30	Can change profile	8	change_profile
31	Can delete profile	8	delete_profile
32	Can view profile	8	view_profile
33	Can add contact	9	add_contact
34	Can change contact	9	change_contact
35	Can delete contact	9	delete_contact
36	Can view contact	9	view_contact
37	Can add email subscription	10	add_emailsubscription
38	Can change email subscription	10	change_emailsubscription
39	Can delete email subscription	10	delete_emailsubscription
40	Can view email subscription	10	view_emailsubscription
41	Can add course	11	add_course
42	Can change course	11	change_course
43	Can delete course	11	delete_course
44	Can view course	11	view_course
45	Can add chapter	12	add_chapter
46	Can change chapter	12	change_chapter
47	Can delete chapter	12	delete_chapter
48	Can view chapter	12	view_chapter
49	Can add topic	13	add_topic
50	Can change topic	13	change_topic
51	Can delete topic	13	delete_topic
52	Can view topic	13	view_topic
53	Can add cs comment	14	add_cscomment
54	Can change cs comment	14	change_cscomment
55	Can delete cs comment	14	delete_cscomment
56	Can view cs comment	14	view_cscomment
57	Can add category	15	add_category
58	Can change category	15	change_category
59	Can delete category	15	delete_category
60	Can view category	15	view_category
61	Can add Article	16	add_article
62	Can change Article	16	change_article
63	Can delete Article	16	delete_article
64	Can view Article	16	view_article
65	Can add a comment	17	add_acomment
66	Can change a comment	17	change_acomment
67	Can delete a comment	17	delete_acomment
68	Can view a comment	17	view_acomment
69	Can add programming language	18	add_programminglanguage
70	Can change programming language	18	change_programminglanguage
71	Can delete programming language	18	delete_programminglanguage
72	Can view programming language	18	view_programminglanguage
73	Can add chapter	19	add_chapter
74	Can change chapter	19	change_chapter
75	Can delete chapter	19	delete_chapter
76	Can view chapter	19	view_chapter
77	Can add topics	20	add_topics
78	Can change topics	20	change_topics
79	Can delete topics	20	delete_topics
80	Can view topics	20	view_topics
81	Can add pl comment	21	add_plcomment
82	Can change pl comment	21	change_plcomment
83	Can delete pl comment	21	delete_plcomment
84	Can view pl comment	21	view_plcomment
85	Can add Programming Language	22	add_programmlanguage
86	Can change Programming Language	22	change_programmlanguage
87	Can delete Programming Language	22	delete_programmlanguage
88	Can view Programming Language	22	view_programmlanguage
89	Can add framework	23	add_framework
90	Can change framework	23	change_framework
91	Can delete framework	23	delete_framework
92	Can view framework	23	view_framework
93	Can add chapter	24	add_chapter
94	Can change chapter	24	change_chapter
95	Can delete chapter	24	delete_chapter
96	Can view chapter	24	view_chapter
97	Can add topic	25	add_topic
98	Can change topic	25	change_topic
99	Can delete topic	25	delete_topic
100	Can view topic	25	view_topic
101	Can add framework comment	26	add_frameworkcomment
102	Can change framework comment	26	change_frameworkcomment
103	Can delete framework comment	26	delete_frameworkcomment
104	Can view framework comment	26	view_frameworkcomment
105	Can add tag	27	add_tag
106	Can change tag	27	change_tag
107	Can delete tag	27	delete_tag
108	Can view tag	27	view_tag
109	Can add tagged item	28	add_taggeditem
110	Can change tagged item	28	change_taggeditem
111	Can delete tagged item	28	delete_taggeditem
112	Can view tagged item	28	view_taggeditem
113	Can add site	29	add_site
114	Can change site	29	change_site
115	Can delete site	29	delete_site
116	Can view site	29	view_site
117	Can add visitior	30	add_visitior
118	Can change visitior	30	change_visitior
119	Can delete visitior	30	delete_visitior
120	Can view visitior	30	view_visitior
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
3	pbkdf2_sha256$260000$dTGzR6qkUBrTUSm3pQtE5j$mj9ZGgoPuEFBNqLQadbD/ml83Y5kYIgRQE9KdFiNP00=	2021-11-17 00:14:13.372+05:45	f	anjan			anjanparajuli2001@gmail.com	t	t	2021-11-15 18:44:39+05:45
4	pbkdf2_sha256$260000$B6QjW50SYCsWAQgg4T8Bj6$kQD6H+lKpmghN3gGkSnJsPpR7Qk1+DHj7zPdL0YNBCE=	2021-11-16 18:07:35.111+05:45	f	Sangam00			girisangam00@gmail.com	t	t	2021-11-16 13:51:42+05:45
5	pbkdf2_sha256$260000$3BVtaj31lJSU5tDUPCUFos$9NUGzjISD7je1+zlWR5SPkwVB0vIniGzXZNdlWOUWDI=	2021-11-16 13:55:27+05:45	f	Aabee			aabiskardhungana0@gmail.com	t	t	2021-11-16 13:55:19+05:45
6	pbkdf2_sha256$260000$12z2ddmTNvJldOCKtnLdzx$+ScAvDxfUdrZ8NbVXQTDNuCzXD9PpIR7zT4+0pfAk2I=	2021-11-16 18:09:24+05:45	f	bibek355_fpkhr			bibekacharya955@gmail.com	t	t	2021-11-16 18:08:43+05:45
7	pbkdf2_sha256$260000$n9cEhq6H706PI7oaiXOqoT$5+Y+Y/41OhxSohoEVkTKhn6vUR3CfWlymEZN5fv3UBw=	2021-11-28 15:02:24.813+05:45	f	Bishal			buyersangam12@gmail.com	f	t	2021-11-28 14:56:11.544+05:45
8	pbkdf2_sha256$260000$yMqusS4YQ7H0ssEZ7uzUgI$7tcMZZWg5IB/XIMeyePzCTcRSGPexKPTMYqej7oC/cA=	2022-02-02 08:21:23.246+05:45	f	sama			sama12@gmail.com	f	t	2022-02-02 08:21:16.165+05:45
9	sdssdsf234sx	\N	f	testuser				f	t	2022-03-26 15:01:23.620703+05:45
1	pbkdf2_sha256$260000$s7k4xDpyzx4jFT1Az5qG07$N62d4JD1LKyYWDExk9fIvIzo96C8DEKCDii2ACOkcCA=	2022-04-05 13:40:55.801062+05:45	t	Sam			samirshahi9882@gmail.com	t	t	2021-10-07 17:26:12+05:45
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2022-02-04 17:31:16.621155+05:45	42	sama	3		8	1
2	2022-02-04 17:31:16.628365+05:45	41	Bishal	3		8	1
3	2022-02-04 17:31:16.630995+05:45	40	bibek355_fpkhr	3		8	1
4	2022-02-04 17:31:16.63348+05:45	39	Aabee	3		8	1
5	2022-02-04 17:31:16.63578+05:45	38	Sangam00	3		8	1
6	2022-02-04 17:31:16.638005+05:45	37	anjan	3		8	1
7	2022-02-04 17:31:16.641068+05:45	36	Sam	3		8	1
8	2022-02-04 21:24:02.086957+05:45	2	acadepra.com	1	[{"added": {}}]	29	1
9	2022-02-04 21:25:32.916038+05:45	1	127.0.0.1:8000	2	[{"changed": {"fields": ["Domain name", "Display name"]}}]	29	1
10	2022-02-08 13:20:29.936186+05:45	16	Generate Django Models Diagram	2	[{"changed": {"fields": ["Title", "Description", "Tags"]}}]	16	1
11	2022-02-08 13:24:47.037928+05:45	17	Django Multiple Database Setup	2	[{"changed": {"fields": ["Title", "Tags"]}}]	16	1
12	2022-02-08 13:28:42.035159+05:45	15	Dockerize your Django Application	2	[{"changed": {"fields": ["Title", "Tags"]}}]	16	1
13	2022-02-08 13:30:52.691777+05:45	15	How to Dockerize your Django Application?	2	[{"changed": {"fields": ["Title"]}}]	16	1
14	2022-03-25 21:02:19.038448+05:45	7	Virtual Environment with virtualenv	2	[{"changed": {"fields": ["Tags", "Category", "Views", "Total views"]}}]	16	1
15	2022-03-25 21:03:42.134264+05:45	7	Virtual Environment with virtualenv	2	[]	16	1
16	2022-03-25 21:08:22.180891+05:45	7	Virtual Environment with virtualenv	2	[]	16	1
17	2022-03-25 21:13:53.426847+05:45	8	Heroku Postgres Backup and load Data	2	[{"changed": {"fields": ["Tags", "Total views"]}}]	16	1
18	2022-03-25 21:16:13.288919+05:45	8	Heroku Postgres Backup and load Data	2	[{"changed": {"fields": ["Views"]}}]	16	1
19	2022-03-25 21:17:08.938933+05:45	4	127.0.0.1	3		30	1
20	2022-03-25 21:17:09.012488+05:45	3	127.0.0.1	3		30	1
21	2022-03-25 21:17:09.08793+05:45	2	127.0.0.1	3		30	1
22	2022-03-25 21:17:09.137209+05:45	1	127.0.0.1	3		30	1
23	2022-03-25 21:42:56.965911+05:45	6	sdfsdfr23	3		30	1
24	2022-03-25 21:43:28.685134+05:45	8	Heroku Postgres Backup and load Data	2	[{"changed": {"fields": ["Views"]}}]	16	1
25	2022-03-25 21:45:09.898506+05:45	7	Virtual Environment with virtualenv	2	[{"changed": {"fields": ["Total views"]}}]	16	1
26	2022-03-25 21:51:24.470642+05:45	21	Serve Django Mediafiles using Cloudinary	2	[{"changed": {"fields": ["Tags", "Views", "Total views"]}}]	16	1
27	2022-04-02 18:44:05.106132+05:45	1	Sam	2	[{"changed": {"fields": ["Image"]}}]	8	1
28	2022-04-02 18:45:29.097139+05:45	6	Virtual Environment with pipenv	2	[{"changed": {"fields": ["Tags", "Total views"]}}]	16	1
29	2022-04-05 14:49:27.797906+05:45	1	Sam	2	[{"changed": {"fields": ["Image"]}}]	8	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	EHub	media
8	EHub	profile
9	EHub	contact
10	EHub	emailsubscription
11	MCourses	course
12	MCourses	chapter
13	MCourses	topic
14	MCourses	cscomment
15	MArticles	category
16	MArticles	article
17	MArticles	acomment
18	MProgrammingLanguage	programminglanguage
19	MProgrammingLanguage	chapter
20	MProgrammingLanguage	topics
21	MProgrammingLanguage	plcomment
22	MSoftwareDevelopment	programmlanguage
23	MSoftwareDevelopment	framework
24	MSoftwareDevelopment	chapter
25	MSoftwareDevelopment	topic
26	MSoftwareDevelopment	frameworkcomment
27	taggit	tag
28	taggit	taggeditem
29	sites	site
30	MArticles	visitior
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2022-02-03 16:27:35.36751+05:45
2	auth	0001_initial	2022-02-03 16:27:36.119977+05:45
3	EHub	0001_initial	2022-02-03 16:27:36.495254+05:45
4	taggit	0001_initial	2022-02-03 16:27:36.961698+05:45
5	taggit	0002_auto_20150616_2121	2022-02-03 16:27:37.013597+05:45
6	contenttypes	0002_remove_content_type_name	2022-02-03 16:27:37.141918+05:45
7	taggit	0003_taggeditem_add_unique_index	2022-02-03 16:27:37.191+05:45
8	MArticles	0001_initial	2022-02-03 16:27:38.474109+05:45
9	MArticles	0002_auto_20211113_2133	2022-02-03 16:27:39.303922+05:45
10	MArticles	0003_alter_article_thumbnail	2022-02-03 16:27:39.354073+05:45
11	MArticles	0004_alter_article_title	2022-02-03 16:27:39.598317+05:45
12	MArticles	0005_alter_article_title	2022-02-03 16:27:39.61783+05:45
13	MArticles	0006_alter_article_slug	2022-02-03 16:27:39.639836+05:45
14	MArticles	0007_alter_article_visibility	2022-02-03 16:27:39.652669+05:45
15	MCourses	0001_initial	2022-02-03 16:27:41.709515+05:45
16	MCourses	0002_alter_course_thumbnail	2022-02-03 16:27:41.762994+05:45
17	MCourses	0003_auto_20211117_1332	2022-02-03 16:27:41.806229+05:45
18	MCourses	0004_alter_chapter_chapter_no	2022-02-03 16:27:42.115122+05:45
19	MCourses	0005_alter_chapter_chapter_no	2022-02-03 16:27:42.142037+05:45
20	MCourses	0006_alter_topic_topic_no	2022-02-03 16:27:42.574815+05:45
21	MCourses	0007_auto_20211117_1354	2022-02-03 16:27:42.657099+05:45
22	MCourses	0008_alter_chapter_options	2022-02-03 16:27:42.695582+05:45
23	MProgrammingLanguage	0001_initial	2022-02-03 16:27:44.437928+05:45
24	MProgrammingLanguage	0002_alter_programminglanguage_thumbnail	2022-02-03 16:27:44.460618+05:45
25	MProgrammingLanguage	0003_auto_20211117_1332	2022-02-03 16:27:44.487194+05:45
26	MProgrammingLanguage	0004_auto_20211117_1342	2022-02-03 16:27:44.992457+05:45
27	MProgrammingLanguage	0005_auto_20211117_1408	2022-02-03 16:27:45.072531+05:45
28	MProgrammingLanguage	0006_auto_20211117_1410	2022-02-03 16:27:45.106298+05:45
29	MSoftwareDevelopment	0001_initial	2022-02-03 16:27:46.127751+05:45
30	MSoftwareDevelopment	0002_alter_framework_thumbnail	2022-02-03 16:27:46.159119+05:45
31	MSoftwareDevelopment	0003_auto_20211117_1332	2022-02-03 16:27:46.194972+05:45
32	MSoftwareDevelopment	0004_auto_20211117_1342	2022-02-03 16:27:46.744994+05:45
33	MSoftwareDevelopment	0005_auto_20211117_1408	2022-02-03 16:27:46.852024+05:45
34	admin	0001_initial	2022-02-03 16:27:47.051455+05:45
35	admin	0002_logentry_remove_auto_add	2022-02-03 16:27:47.070172+05:45
36	admin	0003_logentry_add_action_flag_choices	2022-02-03 16:27:47.085991+05:45
37	auth	0002_alter_permission_name_max_length	2022-02-03 16:27:47.118352+05:45
38	auth	0003_alter_user_email_max_length	2022-02-03 16:27:47.132868+05:45
39	auth	0004_alter_user_username_opts	2022-02-03 16:27:47.14474+05:45
40	auth	0005_alter_user_last_login_null	2022-02-03 16:27:47.15913+05:45
41	auth	0006_require_contenttypes_0002	2022-02-03 16:27:47.16927+05:45
42	auth	0007_alter_validators_add_error_messages	2022-02-03 16:27:47.181541+05:45
43	auth	0008_alter_user_username_max_length	2022-02-03 16:27:47.235611+05:45
44	auth	0009_alter_user_last_name_max_length	2022-02-03 16:27:47.250313+05:45
45	auth	0010_alter_group_name_max_length	2022-02-03 16:27:47.282926+05:45
46	auth	0011_update_proxy_permissions	2022-02-03 16:27:47.310871+05:45
47	auth	0012_alter_user_first_name_max_length	2022-02-03 16:27:47.324249+05:45
48	sessions	0001_initial	2022-02-03 16:27:47.502882+05:45
49	sites	0001_initial	2022-02-03 16:27:47.549499+05:45
50	sites	0002_alter_domain_unique	2022-02-03 16:27:47.656795+05:45
51	MArticles	0008_auto_20220203_1737	2022-02-03 18:47:04.522347+05:45
52	MCourses	0009_auto_20220203_1753	2022-02-03 18:47:04.582151+05:45
53	MProgrammingLanguage	0007_auto_20220203_1739	2022-02-03 18:47:04.646332+05:45
54	MSoftwareDevelopment	0006_auto_20220203_1739	2022-02-03 18:47:04.702708+05:45
55	MArticles	0009_auto_20220325_1944	2022-03-25 20:52:09.416402+05:45
56	MArticles	0010_alter_article_views	2022-03-25 20:52:09.500292+05:45
57	MArticles	0011_rename_ip_address_visitior_ipaddress	2022-03-25 20:52:09.573283+05:45
58	MArticles	0012_article_total_views	2022-03-25 20:58:28.811178+05:45
59	MArticles	0013_alter_article_total_views	2022-03-25 21:08:05.452608+05:45
60	MArticles	0014_alter_article_total_views	2022-03-25 21:11:11.210785+05:45
61	MArticles	0015_alter_article_views	2022-03-25 21:13:49.87292+05:45
62	MArticles	0016_visitior_total_views	2022-03-25 21:29:47.982922+05:45
63	MArticles	0017_alter_visitior_total_views	2022-03-25 21:32:47.460538+05:45
64	MArticles	0018_remove_visitior_total_views	2022-03-25 21:41:33.82737+05:45
65	EHub	0002_rename_username_profile_name	2022-03-26 14:46:21.70304+05:45
66	EHub	0003_rename_name_profile_username	2022-03-26 14:51:05.697895+05:45
67	EHub	0004_alter_profile_image	2022-04-05 14:34:10.81472+05:45
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
56206qtbv7tteaif5ziruwwayrvevlqy	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nHL1i:dX_TDWqAl1ohjjmr67ANM6xVjK3-mURZ5J6Tz9T3WHw	2022-02-22 13:20:02.316017+05:45
2xk9orqwncnxjslltg63vnjf2vitwqa2	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nJEGJ:Qa-TE_trcxub6eBQHiV_RemCDs3ADaFyno3Cu_qIckA	2022-02-27 18:30:55.653656+05:45
czdwm0ibg6uf8fuioky6sbstkr0245g7	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nJFyn:ShiTlGWNc2EWAcBcL0j0ZDaZyXJGeSGn2smYh-eO5VY	2022-02-27 20:20:57.527708+05:45
bqt11e549fylff0itp8gyvpuyng559p2	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nL1NI:DX6iOVXKktw-gc9Op9J4Mvb77M4j5BmnTPRvM1G2SCQ	2022-03-04 17:09:32.860754+05:45
fxxa9gztcb5dsa72pvn0b0eqejhtn9b2	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nP5WD:4SxfX7ThSOUIP2tsUwpPOdH1DkagUKo2sX0nvBYyag8	2022-03-01 22:24:33.257665+05:45
fwiorrjmvbpo18iqsuztwfoju54331t2	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nT1Qq:qiVFqA2iB60LFIq_7HEFgq_6MN0gG18UkHEzRSvtQlA	2022-05-11 18:50:16.258382+05:45
eg53vme9s9ugjfku2pxij0ty8tb1lylc	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nXla1:kFwl3hyHEy7vZTs_2JlAUKfws_iZ8eOtw89BiATTMos	2022-03-26 20:55:21.654023+05:45
ib9r1ufrlfzxs3hbzu6wvc1sz62fwo1l	.eJxVjEEOwiAQRe_C2hBApoBL956BMMMgVUOT0q6Md7dNutDtf-_9t4hpXWpcO89xzOIitDj9bpjoyW0H-ZHafZI0tWUeUe6KPGiXtynz63q4fwc19brVpiCwN4xDTkwFApKh4qwrpALA2ZNF5zQUv0EIOqsEigAND5aJrPh8ARCpOM4:1nY2KX:wRrFdmlPDEo6iD6yYLTlUYs2deKY2jDYKVLRFGS6_MU	2022-03-27 14:48:29.307975+05:45
r5jpooh9yy2016104xmgh70tf214pck2	.eJxVjMsOwiAQRf-FtSHS8hhcuu83EGBmpGogKe3K-O_apAvd3nPOfYkQt7WErdMSZhQXocTpd0sxP6juAO-x3prMra7LnOSuyIN2OTWk5_Vw_w5K7OVbc7IKMnjPhkDrYWSrkC2MlK0zYLLXXrHVBs8jepUccYxuQEbIyaEV7w_dlzg0:1nadJc:uajAKVsfn6C7Zsy-jkXEOcl5GTHnnlfYN0xZ378agd4	2022-04-03 18:42:16.454577+05:45
x69orvvwy809g12bzsyjv07pdly6p19t	.eJxVjMsOwiAQRf-FtSHS8hhcuu83EGBmpGogKe3K-O_apAvd3nPOfYkQt7WErdMSZhQXocTpd0sxP6juAO-x3prMra7LnOSuyIN2OTWk5_Vw_w5K7OVbc7IKMnjPhkDrYWSrkC2MlK0zYLLXXrHVBs8jepUccYxuQEbIyaEV7w_dlzg0:1nbe2e:pdedP36b-VSLAjlaFYfIMX8bXB9Yc65fiKqGBOreW80	2022-04-06 13:40:56.11348+05:45
\.


--
-- Data for Name: django_site; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_site (id, domain, name) FROM stdin;
2	acadepra.com	acadepra
1	127.0.0.1:8000	localhost
\.


--
-- Data for Name: taggit_tag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.taggit_tag (id, name, slug) FROM stdin;
1	webdevelopment	webdevelopment
2	django	django
3	python	python
4	photoediting	photoediting
7	technology	technology
9	cloud	cloud
10	computing	computing
14	Networking	networking
\.


--
-- Data for Name: taggit_taggeditem; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.taggit_taggeditem (id, object_id, content_type_id, tag_id) FROM stdin;
1	16	16	2
2	16	16	3
3	17	16	2
4	17	16	3
5	15	16	2
6	15	16	3
7	7	16	2
8	8	16	2
9	21	16	2
10	6	16	2
\.


--
-- Name: EHub_contact_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."EHub_contact_id_seq"', 1, false);


--
-- Name: EHub_emailsubscription_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."EHub_emailsubscription_id_seq"', 2, true);


--
-- Name: EHub_media_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."EHub_media_id_seq"', 1, false);


--
-- Name: EHub_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."EHub_profile_id_seq"', 9, true);


--
-- Name: MArticles_acomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MArticles_acomment_id_seq"', 1, true);


--
-- Name: MArticles_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MArticles_category_id_seq"', 13, true);


--
-- Name: MArticles_visitior_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MArticles_visitior_id_seq"', 6, true);


--
-- Name: MCourses_chapter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MCourses_chapter_id_seq"', 2, true);


--
-- Name: MCourses_course_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MCourses_course_id_seq"', 3, true);


--
-- Name: MCourses_cscomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MCourses_cscomment_id_seq"', 1, false);


--
-- Name: MCourses_topic_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MCourses_topic_id_seq"', 5, true);


--
-- Name: MProgrammingLanguage_chapter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MProgrammingLanguage_chapter_id_seq"', 1, false);


--
-- Name: MProgrammingLanguage_plcomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MProgrammingLanguage_plcomment_id_seq"', 1, false);


--
-- Name: MProgrammingLanguage_programminglanguage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MProgrammingLanguage_programminglanguage_id_seq"', 1, false);


--
-- Name: MProgrammingLanguage_topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MProgrammingLanguage_topics_id_seq"', 1, false);


--
-- Name: MSoftwareDevelopment_chapter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MSoftwareDevelopment_chapter_id_seq"', 1, false);


--
-- Name: MSoftwareDevelopment_framework_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MSoftwareDevelopment_framework_id_seq"', 1, false);


--
-- Name: MSoftwareDevelopment_frameworkcomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MSoftwareDevelopment_frameworkcomment_id_seq"', 1, false);


--
-- Name: MSoftwareDevelopment_programmlanguage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MSoftwareDevelopment_programmlanguage_id_seq"', 1, false);


--
-- Name: MSoftwareDevelopment_topic_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."MSoftwareDevelopment_topic_id_seq"', 1, false);


--
-- Name: article_bookmarks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.article_bookmarks_id_seq', 20, true);


--
-- Name: article_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.article_category_id_seq', 65, true);


--
-- Name: article_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.article_id_seq', 39, true);


--
-- Name: article_views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.article_views_id_seq', 13, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 120, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 9, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 29, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 30, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 67, true);


--
-- Name: django_site_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_site_id_seq', 2, true);


--
-- Name: taggit_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.taggit_tag_id_seq', 14, true);


--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.taggit_taggeditem_id_seq', 10, true);


--
-- Name: EHub_contact EHub_contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_contact"
    ADD CONSTRAINT "EHub_contact_pkey" PRIMARY KEY (id);


--
-- Name: EHub_emailsubscription EHub_emailsubscription_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_emailsubscription"
    ADD CONSTRAINT "EHub_emailsubscription_pkey" PRIMARY KEY (id);


--
-- Name: EHub_media EHub_media_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_media"
    ADD CONSTRAINT "EHub_media_pkey" PRIMARY KEY (id);


--
-- Name: EHub_profile EHub_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_profile"
    ADD CONSTRAINT "EHub_profile_pkey" PRIMARY KEY (id);


--
-- Name: EHub_profile EHub_profile_username_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_profile"
    ADD CONSTRAINT "EHub_profile_username_id_key" UNIQUE (username_id);


--
-- Name: MArticles_acomment MArticles_acomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_acomment"
    ADD CONSTRAINT "MArticles_acomment_pkey" PRIMARY KEY (id);


--
-- Name: MArticles_category MArticles_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_category"
    ADD CONSTRAINT "MArticles_category_pkey" PRIMARY KEY (id);


--
-- Name: MArticles_visitior MArticles_visitior_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_visitior"
    ADD CONSTRAINT "MArticles_visitior_pkey" PRIMARY KEY (id);


--
-- Name: MCourses_chapter MCourses_chapter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_chapter"
    ADD CONSTRAINT "MCourses_chapter_pkey" PRIMARY KEY (id);


--
-- Name: MCourses_chapter MCourses_chapter_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_chapter"
    ADD CONSTRAINT "MCourses_chapter_title_key" UNIQUE (title);


--
-- Name: MCourses_course MCourses_course_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_course"
    ADD CONSTRAINT "MCourses_course_pkey" PRIMARY KEY (id);


--
-- Name: MCourses_course MCourses_course_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_course"
    ADD CONSTRAINT "MCourses_course_slug_key" UNIQUE (slug);


--
-- Name: MCourses_course MCourses_course_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_course"
    ADD CONSTRAINT "MCourses_course_title_key" UNIQUE (title);


--
-- Name: MCourses_cscomment MCourses_cscomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_cscomment"
    ADD CONSTRAINT "MCourses_cscomment_pkey" PRIMARY KEY (id);


--
-- Name: MCourses_topic MCourses_topic_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_pkey" PRIMARY KEY (id);


--
-- Name: MCourses_topic MCourses_topic_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_slug_key" UNIQUE (slug);


--
-- Name: MCourses_topic MCourses_topic_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_title_key" UNIQUE (title);


--
-- Name: MProgrammingLanguage_chapter MProgrammingLanguage_chapter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_chapter"
    ADD CONSTRAINT "MProgrammingLanguage_chapter_pkey" PRIMARY KEY (id);


--
-- Name: MProgrammingLanguage_chapter MProgrammingLanguage_chapter_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_chapter"
    ADD CONSTRAINT "MProgrammingLanguage_chapter_title_key" UNIQUE (title);


--
-- Name: MProgrammingLanguage_plcomment MProgrammingLanguage_plcomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_plcomment"
    ADD CONSTRAINT "MProgrammingLanguage_plcomment_pkey" PRIMARY KEY (id);


--
-- Name: MProgrammingLanguage_programminglanguage MProgrammingLanguage_programminglanguage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_programminglanguage"
    ADD CONSTRAINT "MProgrammingLanguage_programminglanguage_pkey" PRIMARY KEY (id);


--
-- Name: MProgrammingLanguage_programminglanguage MProgrammingLanguage_programminglanguage_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_programminglanguage"
    ADD CONSTRAINT "MProgrammingLanguage_programminglanguage_slug_key" UNIQUE (slug);


--
-- Name: MProgrammingLanguage_programminglanguage MProgrammingLanguage_programminglanguage_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_programminglanguage"
    ADD CONSTRAINT "MProgrammingLanguage_programminglanguage_title_key" UNIQUE (title);


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_topics_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_topics_pkey" PRIMARY KEY (id);


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_topics_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_topics_slug_key" UNIQUE (slug);


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_topics_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_topics_title_key" UNIQUE (title);


--
-- Name: MSoftwareDevelopment_chapter MSoftwareDevelopment_chapter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_chapter"
    ADD CONSTRAINT "MSoftwareDevelopment_chapter_pkey" PRIMARY KEY (id);


--
-- Name: MSoftwareDevelopment_chapter MSoftwareDevelopment_chapter_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_chapter"
    ADD CONSTRAINT "MSoftwareDevelopment_chapter_title_key" UNIQUE (title);


--
-- Name: MSoftwareDevelopment_framework MSoftwareDevelopment_framework_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_framework"
    ADD CONSTRAINT "MSoftwareDevelopment_framework_pkey" PRIMARY KEY (id);


--
-- Name: MSoftwareDevelopment_framework MSoftwareDevelopment_framework_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_framework"
    ADD CONSTRAINT "MSoftwareDevelopment_framework_slug_key" UNIQUE (slug);


--
-- Name: MSoftwareDevelopment_framework MSoftwareDevelopment_framework_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_framework"
    ADD CONSTRAINT "MSoftwareDevelopment_framework_title_key" UNIQUE (title);


--
-- Name: MSoftwareDevelopment_frameworkcomment MSoftwareDevelopment_frameworkcomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_frameworkcomment"
    ADD CONSTRAINT "MSoftwareDevelopment_frameworkcomment_pkey" PRIMARY KEY (id);


--
-- Name: MSoftwareDevelopment_programmlanguage MSoftwareDevelopment_programmlanguage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_programmlanguage"
    ADD CONSTRAINT "MSoftwareDevelopment_programmlanguage_pkey" PRIMARY KEY (id);


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_topic_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_topic_pkey" PRIMARY KEY (id);


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_topic_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_topic_slug_key" UNIQUE (slug);


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_topic_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_topic_title_key" UNIQUE (title);


--
-- Name: article_bookmarks article_bookmarks_article_id_profile_id_17b615e4_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_bookmarks
    ADD CONSTRAINT article_bookmarks_article_id_profile_id_17b615e4_uniq UNIQUE (article_id, profile_id);


--
-- Name: article_bookmarks article_bookmarks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_bookmarks
    ADD CONSTRAINT article_bookmarks_pkey PRIMARY KEY (id);


--
-- Name: article_category article_category_article_id_category_id_d5e79a15_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_category
    ADD CONSTRAINT article_category_article_id_category_id_d5e79a15_uniq UNIQUE (article_id, category_id);


--
-- Name: article_category article_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_category
    ADD CONSTRAINT article_category_pkey PRIMARY KEY (id);


--
-- Name: article article_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_pkey PRIMARY KEY (id);


--
-- Name: article article_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_slug_key UNIQUE (slug);


--
-- Name: article_views article_views_article_id_visitior_id_9148908c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_views
    ADD CONSTRAINT article_views_article_id_visitior_id_9148908c_uniq UNIQUE (article_id, visitior_id);


--
-- Name: article_views article_views_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_views
    ADD CONSTRAINT article_views_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: django_site django_site_domain_a2e37b91_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_domain_a2e37b91_uniq UNIQUE (domain);


--
-- Name: django_site django_site_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_name_key UNIQUE (name);


--
-- Name: taggit_tag taggit_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_slug_key UNIQUE (slug);


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_object_i_4bb97a8e_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_object_i_4bb97a8e_uniq UNIQUE (content_type_id, object_id, tag_id);


--
-- Name: taggit_taggeditem taggit_taggeditem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_pkey PRIMARY KEY (id);


--
-- Name: EHub_profile_first_name_44e77867; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "EHub_profile_first_name_44e77867" ON public."EHub_profile" USING btree (first_name);


--
-- Name: EHub_profile_first_name_44e77867_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "EHub_profile_first_name_44e77867_like" ON public."EHub_profile" USING btree (first_name varchar_pattern_ops);


--
-- Name: MArticles_acomment_article_id_826f64b0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MArticles_acomment_article_id_826f64b0" ON public."MArticles_acomment" USING btree (article_id);


--
-- Name: MArticles_acomment_parent_id_adffa4c0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MArticles_acomment_parent_id_adffa4c0" ON public."MArticles_acomment" USING btree (parent_id);


--
-- Name: MArticles_acomment_tree_id_2f8da441; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MArticles_acomment_tree_id_2f8da441" ON public."MArticles_acomment" USING btree (tree_id);


--
-- Name: MArticles_acomment_user_id_04066c8a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MArticles_acomment_user_id_04066c8a" ON public."MArticles_acomment" USING btree (user_id);


--
-- Name: MCourses_chapter_course_id_4b2e623b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_chapter_course_id_4b2e623b" ON public."MCourses_chapter" USING btree (course_id);


--
-- Name: MCourses_chapter_title_1cf323bb_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_chapter_title_1cf323bb_like" ON public."MCourses_chapter" USING btree (title varchar_pattern_ops);


--
-- Name: MCourses_course_author_id_d466b6c2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_course_author_id_d466b6c2" ON public."MCourses_course" USING btree (author_id);


--
-- Name: MCourses_course_slug_75f61d05_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_course_slug_75f61d05_like" ON public."MCourses_course" USING btree (slug varchar_pattern_ops);


--
-- Name: MCourses_course_title_5e3dcba8_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_course_title_5e3dcba8_like" ON public."MCourses_course" USING btree (title varchar_pattern_ops);


--
-- Name: MCourses_cscomment_parent_id_890b98b7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_cscomment_parent_id_890b98b7" ON public."MCourses_cscomment" USING btree (parent_id);


--
-- Name: MCourses_cscomment_topic_id_789dfbc7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_cscomment_topic_id_789dfbc7" ON public."MCourses_cscomment" USING btree (topic_id);


--
-- Name: MCourses_cscomment_tree_id_d82f067d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_cscomment_tree_id_d82f067d" ON public."MCourses_cscomment" USING btree (tree_id);


--
-- Name: MCourses_cscomment_user_id_5cde28de; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_cscomment_user_id_5cde28de" ON public."MCourses_cscomment" USING btree (user_id);


--
-- Name: MCourses_topic_author_id_443b7eff; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_topic_author_id_443b7eff" ON public."MCourses_topic" USING btree (author_id);


--
-- Name: MCourses_topic_chapter_id_e2b4f2ed; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_topic_chapter_id_e2b4f2ed" ON public."MCourses_topic" USING btree (chapter_id);


--
-- Name: MCourses_topic_next_topic_id_9dadf9b2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_topic_next_topic_id_9dadf9b2" ON public."MCourses_topic" USING btree (next_topic_id);


--
-- Name: MCourses_topic_previous_topic_id_3d150a2a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_topic_previous_topic_id_3d150a2a" ON public."MCourses_topic" USING btree (previous_topic_id);


--
-- Name: MCourses_topic_slug_492be302_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_topic_slug_492be302_like" ON public."MCourses_topic" USING btree (slug varchar_pattern_ops);


--
-- Name: MCourses_topic_title_55b5024a_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MCourses_topic_title_55b5024a_like" ON public."MCourses_topic" USING btree (title varchar_pattern_ops);


--
-- Name: MProgrammingLanguage_chapter_language_id_4b12bc98; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_chapter_language_id_4b12bc98" ON public."MProgrammingLanguage_chapter" USING btree (language_id);


--
-- Name: MProgrammingLanguage_chapter_title_b4189e07_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_chapter_title_b4189e07_like" ON public."MProgrammingLanguage_chapter" USING btree (title varchar_pattern_ops);


--
-- Name: MProgrammingLanguage_plcomment_parent_id_d848d921; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_plcomment_parent_id_d848d921" ON public."MProgrammingLanguage_plcomment" USING btree (parent_id);


--
-- Name: MProgrammingLanguage_plcomment_topics_id_31b0adcb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_plcomment_topics_id_31b0adcb" ON public."MProgrammingLanguage_plcomment" USING btree (topics_id);


--
-- Name: MProgrammingLanguage_plcomment_tree_id_3d7ecc59; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_plcomment_tree_id_3d7ecc59" ON public."MProgrammingLanguage_plcomment" USING btree (tree_id);


--
-- Name: MProgrammingLanguage_plcomment_user_id_729e0302; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_plcomment_user_id_729e0302" ON public."MProgrammingLanguage_plcomment" USING btree (user_id);


--
-- Name: MProgrammingLanguage_programminglanguage_author_id_0c3aeb35; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_programminglanguage_author_id_0c3aeb35" ON public."MProgrammingLanguage_programminglanguage" USING btree (author_id);


--
-- Name: MProgrammingLanguage_programminglanguage_slug_423e64ac_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_programminglanguage_slug_423e64ac_like" ON public."MProgrammingLanguage_programminglanguage" USING btree (slug varchar_pattern_ops);


--
-- Name: MProgrammingLanguage_programminglanguage_title_9e9aff48_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_programminglanguage_title_9e9aff48_like" ON public."MProgrammingLanguage_programminglanguage" USING btree (title varchar_pattern_ops);


--
-- Name: MProgrammingLanguage_topics_author_id_0400d7e3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_author_id_0400d7e3" ON public."MProgrammingLanguage_topics" USING btree (author_id);


--
-- Name: MProgrammingLanguage_topics_chapter_id_0e877e04; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_chapter_id_0e877e04" ON public."MProgrammingLanguage_topics" USING btree (chapter_id);


--
-- Name: MProgrammingLanguage_topics_next_topic_id_a3223563; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_next_topic_id_a3223563" ON public."MProgrammingLanguage_topics" USING btree (next_topic_id);


--
-- Name: MProgrammingLanguage_topics_planguage_id_af390c95; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_planguage_id_af390c95" ON public."MProgrammingLanguage_topics" USING btree (planguage_id);


--
-- Name: MProgrammingLanguage_topics_previous_topic_id_eb7bd5be; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_previous_topic_id_eb7bd5be" ON public."MProgrammingLanguage_topics" USING btree (previous_topic_id);


--
-- Name: MProgrammingLanguage_topics_slug_510dc0a4_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_slug_510dc0a4_like" ON public."MProgrammingLanguage_topics" USING btree (slug varchar_pattern_ops);


--
-- Name: MProgrammingLanguage_topics_title_8f57e930_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MProgrammingLanguage_topics_title_8f57e930_like" ON public."MProgrammingLanguage_topics" USING btree (title varchar_pattern_ops);


--
-- Name: MSoftwareDevelopment_chapter_framework_id_3c1b11bb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_chapter_framework_id_3c1b11bb" ON public."MSoftwareDevelopment_chapter" USING btree (framework_id);


--
-- Name: MSoftwareDevelopment_chapter_title_dbf47601_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_chapter_title_dbf47601_like" ON public."MSoftwareDevelopment_chapter" USING btree (title varchar_pattern_ops);


--
-- Name: MSoftwareDevelopment_framework_author_id_909faddf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_framework_author_id_909faddf" ON public."MSoftwareDevelopment_framework" USING btree (author_id);


--
-- Name: MSoftwareDevelopment_framework_language_id_95c7095a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_framework_language_id_95c7095a" ON public."MSoftwareDevelopment_framework" USING btree (language_id);


--
-- Name: MSoftwareDevelopment_framework_slug_3b19188a_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_framework_slug_3b19188a_like" ON public."MSoftwareDevelopment_framework" USING btree (slug varchar_pattern_ops);


--
-- Name: MSoftwareDevelopment_framework_title_2d50073c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_framework_title_2d50073c_like" ON public."MSoftwareDevelopment_framework" USING btree (title varchar_pattern_ops);


--
-- Name: MSoftwareDevelopment_frameworkcomment_parent_id_e6fe0221; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_frameworkcomment_parent_id_e6fe0221" ON public."MSoftwareDevelopment_frameworkcomment" USING btree (parent_id);


--
-- Name: MSoftwareDevelopment_frameworkcomment_topic_id_d34257bd; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_frameworkcomment_topic_id_d34257bd" ON public."MSoftwareDevelopment_frameworkcomment" USING btree (topic_id);


--
-- Name: MSoftwareDevelopment_frameworkcomment_tree_id_c0065398; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_frameworkcomment_tree_id_c0065398" ON public."MSoftwareDevelopment_frameworkcomment" USING btree (tree_id);


--
-- Name: MSoftwareDevelopment_frameworkcomment_user_id_2d5eba09; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_frameworkcomment_user_id_2d5eba09" ON public."MSoftwareDevelopment_frameworkcomment" USING btree (user_id);


--
-- Name: MSoftwareDevelopment_topic_author_id_ab670a9a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_author_id_ab670a9a" ON public."MSoftwareDevelopment_topic" USING btree (author_id);


--
-- Name: MSoftwareDevelopment_topic_chapter_id_26d8b606; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_chapter_id_26d8b606" ON public."MSoftwareDevelopment_topic" USING btree (chapter_id);


--
-- Name: MSoftwareDevelopment_topic_framework_id_433d1e36; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_framework_id_433d1e36" ON public."MSoftwareDevelopment_topic" USING btree (framework_id);


--
-- Name: MSoftwareDevelopment_topic_next_topic_id_e2bd10b8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_next_topic_id_e2bd10b8" ON public."MSoftwareDevelopment_topic" USING btree (next_topic_id);


--
-- Name: MSoftwareDevelopment_topic_previous_topic_id_b041da96; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_previous_topic_id_b041da96" ON public."MSoftwareDevelopment_topic" USING btree (previous_topic_id);


--
-- Name: MSoftwareDevelopment_topic_slug_aa3d20c0_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_slug_aa3d20c0_like" ON public."MSoftwareDevelopment_topic" USING btree (slug varchar_pattern_ops);


--
-- Name: MSoftwareDevelopment_topic_title_18afa022_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "MSoftwareDevelopment_topic_title_18afa022_like" ON public."MSoftwareDevelopment_topic" USING btree (title varchar_pattern_ops);


--
-- Name: article_author_id_01185df5; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_author_id_01185df5 ON public.article USING btree (author_id);


--
-- Name: article_bookmarks_article_id_47ca7602; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_bookmarks_article_id_47ca7602 ON public.article_bookmarks USING btree (article_id);


--
-- Name: article_bookmarks_profile_id_138332cf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_bookmarks_profile_id_138332cf ON public.article_bookmarks USING btree (profile_id);


--
-- Name: article_category_article_id_b242b912; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_category_article_id_b242b912 ON public.article_category USING btree (article_id);


--
-- Name: article_category_category_id_c18754f3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_category_category_id_c18754f3 ON public.article_category USING btree (category_id);


--
-- Name: article_slug_8ee1aa1a_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_slug_8ee1aa1a_like ON public.article USING btree (slug varchar_pattern_ops);


--
-- Name: article_views_article_id_5ad3f3c4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_views_article_id_5ad3f3c4 ON public.article_views USING btree (article_id);


--
-- Name: article_views_visitior_id_125df2f3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX article_views_visitior_id_125df2f3 ON public.article_views USING btree (visitior_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: django_site_domain_a2e37b91_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_site_domain_a2e37b91_like ON public.django_site USING btree (domain varchar_pattern_ops);


--
-- Name: taggit_tag_name_58eb2ed9_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_tag_name_58eb2ed9_like ON public.taggit_tag USING btree (name varchar_pattern_ops);


--
-- Name: taggit_tag_slug_6be58b2c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_tag_slug_6be58b2c_like ON public.taggit_tag USING btree (slug varchar_pattern_ops);


--
-- Name: taggit_taggeditem_content_type_id_9957a03c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_content_type_id_9957a03c ON public.taggit_taggeditem USING btree (content_type_id);


--
-- Name: taggit_taggeditem_content_type_id_object_id_196cc965_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_content_type_id_object_id_196cc965_idx ON public.taggit_taggeditem USING btree (content_type_id, object_id);


--
-- Name: taggit_taggeditem_object_id_e2d7d1df; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_object_id_e2d7d1df ON public.taggit_taggeditem USING btree (object_id);


--
-- Name: taggit_taggeditem_tag_id_f4f5b767; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_tag_id_f4f5b767 ON public.taggit_taggeditem USING btree (tag_id);


--
-- Name: EHub_profile EHub_profile_username_id_3ff1e7e6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EHub_profile"
    ADD CONSTRAINT "EHub_profile_username_id_3ff1e7e6_fk_auth_user_id" FOREIGN KEY (username_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MArticles_acomment MArticles_acomment_article_id_826f64b0_fk_article_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_acomment"
    ADD CONSTRAINT "MArticles_acomment_article_id_826f64b0_fk_article_id" FOREIGN KEY (article_id) REFERENCES public.article(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MArticles_acomment MArticles_acomment_parent_id_adffa4c0_fk_MArticles_acomment_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_acomment"
    ADD CONSTRAINT "MArticles_acomment_parent_id_adffa4c0_fk_MArticles_acomment_id" FOREIGN KEY (parent_id) REFERENCES public."MArticles_acomment"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MArticles_acomment MArticles_acomment_user_id_04066c8a_fk_EHub_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MArticles_acomment"
    ADD CONSTRAINT "MArticles_acomment_user_id_04066c8a_fk_EHub_profile_id" FOREIGN KEY (user_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_chapter MCourses_chapter_course_id_4b2e623b_fk_MCourses_course_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_chapter"
    ADD CONSTRAINT "MCourses_chapter_course_id_4b2e623b_fk_MCourses_course_id" FOREIGN KEY (course_id) REFERENCES public."MCourses_course"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_course MCourses_course_author_id_d466b6c2_fk_EHub_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_course"
    ADD CONSTRAINT "MCourses_course_author_id_d466b6c2_fk_EHub_profile_id" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_cscomment MCourses_cscomment_parent_id_890b98b7_fk_MCourses_cscomment_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_cscomment"
    ADD CONSTRAINT "MCourses_cscomment_parent_id_890b98b7_fk_MCourses_cscomment_id" FOREIGN KEY (parent_id) REFERENCES public."MCourses_cscomment"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_cscomment MCourses_cscomment_topic_id_789dfbc7_fk_MCourses_topic_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_cscomment"
    ADD CONSTRAINT "MCourses_cscomment_topic_id_789dfbc7_fk_MCourses_topic_id" FOREIGN KEY (topic_id) REFERENCES public."MCourses_topic"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_cscomment MCourses_cscomment_user_id_5cde28de_fk_EHub_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_cscomment"
    ADD CONSTRAINT "MCourses_cscomment_user_id_5cde28de_fk_EHub_profile_id" FOREIGN KEY (user_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_topic MCourses_topic_author_id_443b7eff_fk_EHub_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_author_id_443b7eff_fk_EHub_profile_id" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_topic MCourses_topic_chapter_id_e2b4f2ed_fk_MCourses_chapter_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_chapter_id_e2b4f2ed_fk_MCourses_chapter_id" FOREIGN KEY (chapter_id) REFERENCES public."MCourses_chapter"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_topic MCourses_topic_next_topic_id_9dadf9b2_fk_MCourses_topic_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_next_topic_id_9dadf9b2_fk_MCourses_topic_id" FOREIGN KEY (next_topic_id) REFERENCES public."MCourses_topic"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MCourses_topic MCourses_topic_previous_topic_id_3d150a2a_fk_MCourses_topic_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MCourses_topic"
    ADD CONSTRAINT "MCourses_topic_previous_topic_id_3d150a2a_fk_MCourses_topic_id" FOREIGN KEY (previous_topic_id) REFERENCES public."MCourses_topic"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_author_id_0400d7e3_fk_EHub_prof; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_author_id_0400d7e3_fk_EHub_prof" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_programminglanguage MProgrammingLanguage_author_id_0c3aeb35_fk_EHub_prof; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_programminglanguage"
    ADD CONSTRAINT "MProgrammingLanguage_author_id_0c3aeb35_fk_EHub_prof" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_chapter_id_0e877e04_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_chapter_id_0e877e04_fk_MProgramm" FOREIGN KEY (chapter_id) REFERENCES public."MProgrammingLanguage_chapter"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_chapter MProgrammingLanguage_language_id_4b12bc98_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_chapter"
    ADD CONSTRAINT "MProgrammingLanguage_language_id_4b12bc98_fk_MProgramm" FOREIGN KEY (language_id) REFERENCES public."MProgrammingLanguage_programminglanguage"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_next_topic_id_a3223563_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_next_topic_id_a3223563_fk_MProgramm" FOREIGN KEY (next_topic_id) REFERENCES public."MProgrammingLanguage_topics"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_plcomment MProgrammingLanguage_parent_id_d848d921_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_plcomment"
    ADD CONSTRAINT "MProgrammingLanguage_parent_id_d848d921_fk_MProgramm" FOREIGN KEY (parent_id) REFERENCES public."MProgrammingLanguage_plcomment"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_planguage_id_af390c95_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_planguage_id_af390c95_fk_MProgramm" FOREIGN KEY (planguage_id) REFERENCES public."MProgrammingLanguage_programminglanguage"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_topics MProgrammingLanguage_previous_topic_id_eb7bd5be_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_topics"
    ADD CONSTRAINT "MProgrammingLanguage_previous_topic_id_eb7bd5be_fk_MProgramm" FOREIGN KEY (previous_topic_id) REFERENCES public."MProgrammingLanguage_topics"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_plcomment MProgrammingLanguage_topics_id_31b0adcb_fk_MProgramm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_plcomment"
    ADD CONSTRAINT "MProgrammingLanguage_topics_id_31b0adcb_fk_MProgramm" FOREIGN KEY (topics_id) REFERENCES public."MProgrammingLanguage_topics"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MProgrammingLanguage_plcomment MProgrammingLanguage_user_id_729e0302_fk_EHub_prof; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MProgrammingLanguage_plcomment"
    ADD CONSTRAINT "MProgrammingLanguage_user_id_729e0302_fk_EHub_prof" FOREIGN KEY (user_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_framework MSoftwareDevelopment_author_id_909faddf_fk_EHub_prof; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_framework"
    ADD CONSTRAINT "MSoftwareDevelopment_author_id_909faddf_fk_EHub_prof" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_author_id_ab670a9a_fk_EHub_prof; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_author_id_ab670a9a_fk_EHub_prof" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_chapter_id_26d8b606_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_chapter_id_26d8b606_fk_MSoftware" FOREIGN KEY (chapter_id) REFERENCES public."MSoftwareDevelopment_chapter"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_chapter MSoftwareDevelopment_framework_id_3c1b11bb_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_chapter"
    ADD CONSTRAINT "MSoftwareDevelopment_framework_id_3c1b11bb_fk_MSoftware" FOREIGN KEY (framework_id) REFERENCES public."MSoftwareDevelopment_framework"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_framework_id_433d1e36_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_framework_id_433d1e36_fk_MSoftware" FOREIGN KEY (framework_id) REFERENCES public."MSoftwareDevelopment_framework"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_framework MSoftwareDevelopment_language_id_95c7095a_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_framework"
    ADD CONSTRAINT "MSoftwareDevelopment_language_id_95c7095a_fk_MSoftware" FOREIGN KEY (language_id) REFERENCES public."MSoftwareDevelopment_programmlanguage"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_next_topic_id_e2bd10b8_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_next_topic_id_e2bd10b8_fk_MSoftware" FOREIGN KEY (next_topic_id) REFERENCES public."MSoftwareDevelopment_topic"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_frameworkcomment MSoftwareDevelopment_parent_id_e6fe0221_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_frameworkcomment"
    ADD CONSTRAINT "MSoftwareDevelopment_parent_id_e6fe0221_fk_MSoftware" FOREIGN KEY (parent_id) REFERENCES public."MSoftwareDevelopment_frameworkcomment"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_topic MSoftwareDevelopment_previous_topic_id_b041da96_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_topic"
    ADD CONSTRAINT "MSoftwareDevelopment_previous_topic_id_b041da96_fk_MSoftware" FOREIGN KEY (previous_topic_id) REFERENCES public."MSoftwareDevelopment_topic"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_frameworkcomment MSoftwareDevelopment_topic_id_d34257bd_fk_MSoftware; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_frameworkcomment"
    ADD CONSTRAINT "MSoftwareDevelopment_topic_id_d34257bd_fk_MSoftware" FOREIGN KEY (topic_id) REFERENCES public."MSoftwareDevelopment_topic"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: MSoftwareDevelopment_frameworkcomment MSoftwareDevelopment_user_id_2d5eba09_fk_EHub_prof; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."MSoftwareDevelopment_frameworkcomment"
    ADD CONSTRAINT "MSoftwareDevelopment_user_id_2d5eba09_fk_EHub_prof" FOREIGN KEY (user_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article article_author_id_01185df5_fk_EHub_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT "article_author_id_01185df5_fk_EHub_profile_id" FOREIGN KEY (author_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article_bookmarks article_bookmarks_article_id_47ca7602_fk_article_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_bookmarks
    ADD CONSTRAINT article_bookmarks_article_id_47ca7602_fk_article_id FOREIGN KEY (article_id) REFERENCES public.article(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article_bookmarks article_bookmarks_profile_id_138332cf_fk_EHub_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_bookmarks
    ADD CONSTRAINT "article_bookmarks_profile_id_138332cf_fk_EHub_profile_id" FOREIGN KEY (profile_id) REFERENCES public."EHub_profile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article_category article_category_article_id_b242b912_fk_article_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_category
    ADD CONSTRAINT article_category_article_id_b242b912_fk_article_id FOREIGN KEY (article_id) REFERENCES public.article(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article_category article_category_category_id_c18754f3_fk_MArticles_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_category
    ADD CONSTRAINT "article_category_category_id_c18754f3_fk_MArticles_category_id" FOREIGN KEY (category_id) REFERENCES public."MArticles_category"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article_views article_views_article_id_5ad3f3c4_fk_article_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_views
    ADD CONSTRAINT article_views_article_id_5ad3f3c4_fk_article_id FOREIGN KEY (article_id) REFERENCES public.article(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article_views article_views_visitior_id_125df2f3_fk_MArticles_visitior_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article_views
    ADD CONSTRAINT "article_views_visitior_id_125df2f3_fk_MArticles_visitior_id" FOREIGN KEY (visitior_id) REFERENCES public."MArticles_visitior"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_9957a03c_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_9957a03c_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id FOREIGN KEY (tag_id) REFERENCES public.taggit_tag(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

