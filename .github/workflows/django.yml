name: Dimensionalillusions

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: github
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with TestCase
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE }}
          Email_Host_User: ${{ secrets.Email_Host_User }}
          Email_Host_Password: ${{ secrets.Email_Host_Password }}
        run: |
          python manage.py collectstatic --no-input
          python manage.py test

      - name: Coverage Report
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE }}
          Email_Host_User: ${{ secrets.Email_Host_User }}
          Email_Host_Password: ${{ secrets.Email_Host_Password }}
        run: |
          pip install coverage
          coverage run manage.py test
          coverage report
